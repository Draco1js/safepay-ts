/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { subscriptionsCancel } from "../funcs/subscriptionsCancel.js";
import { subscriptionsGet } from "../funcs/subscriptionsGet.js";
import { subscriptionsSearch } from "../funcs/subscriptionsSearch.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Subscriptions extends ClientSDK {
  /**
   * Find Subscription
   */
  async get(
    options?: RequestOptions,
  ): Promise<
    operations.GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Response
  > {
    return unwrapAsync(subscriptionsGet(
      this,
      options,
    ));
  }

  /**
   * Search Subscriptions
   */
  async search(
    request?: operations.GetClientSubscriptionsV1SearchRequest | undefined,
    options?: RequestOptions,
  ): Promise<operations.GetClientSubscriptionsV1SearchResponse> {
    return unwrapAsync(subscriptionsSearch(
      this,
      request,
      options,
    ));
  }

  /**
   * Cancel Subscription
   */
  async cancel(
    request?:
      | operations.PostClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b2CancelRequest
      | undefined,
    options?: RequestOptions,
  ): Promise<
    operations.PostClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b2CancelResponse
  > {
    return unwrapAsync(subscriptionsCancel(
      this,
      request,
      options,
    ));
  }
}
