/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { usersCreateGuestJwt } from "../funcs/usersCreateGuestJwt.js";
import { usersExists } from "../funcs/usersExists.js";
import { usersFindSafepayShopper } from "../funcs/usersFindSafepayShopper.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Users extends ClientSDK {
  /**
   * Create Guest JWT
   */
  async createGuestJwt(
    request: operations.PostUserV1GuestRequest,
    options?: RequestOptions,
  ): Promise<operations.PostUserV1GuestResponse> {
    return unwrapAsync(usersCreateGuestJwt(
      this,
      request,
      options,
    ));
  }

  /**
   * Safepay Shopper Exists
   */
  async exists(
    request?: operations.GetUserV2ExistsRequest | undefined,
    options?: RequestOptions,
  ): Promise<operations.GetUserV2ExistsResponse> {
    return unwrapAsync(usersExists(
      this,
      request,
      options,
    ));
  }

  /**
   * Find Safepay Shopper
   */
  async findSafepayShopper(
    options?: RequestOptions,
  ): Promise<operations.GetUserV2Response> {
    return unwrapAsync(usersFindSafepayShopper(
      this,
      options,
    ));
  }
}
