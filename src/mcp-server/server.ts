/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { McpServer } from "@modelcontextprotocol/sdk/server/mcp.js";
import { SafepayCore } from "../core.js";
import { SDKOptions } from "../lib/config.js";
import type { ConsoleLogger } from "./console-logger.js";
import { createRegisterPrompt } from "./prompts.js";
import {
  createRegisterResource,
  createRegisterResourceTemplate,
} from "./resources.js";
import { MCPScope } from "./scopes.js";
import { createRegisterTool } from "./tools.js";
import { tool$addressesCreate } from "./tools/addressesCreate.js";
import { tool$apiKeysCreate } from "./tools/apiKeysCreate.js";
import { tool$apiSettingsGetApiKey } from "./tools/apiSettingsGetApiKey.js";
import { tool$apiSettingsUpdateKey } from "./tools/apiSettingsUpdateKey.js";
import { tool$authCreateMerchantJwt } from "./tools/authCreateMerchantJwt.js";
import { tool$authLogin } from "./tools/authLogin.js";
import { tool$clientTransactionsSearch } from "./tools/clientTransactionsSearch.js";
import { tool$companyLogin } from "./tools/companyLogin.js";
import { tool$customersCreate } from "./tools/customersCreate.js";
import { tool$customersList } from "./tools/customersList.js";
import { tool$invoicesCreateQuickLink } from "./tools/invoicesCreateQuickLink.js";
import { tool$metaGetCountry } from "./tools/metaGetCountry.js";
import { tool$metaListCountries } from "./tools/metaListCountries.js";
import { tool$orderPaymentsCreate } from "./tools/orderPaymentsCreate.js";
import { tool$passportGenerateToken } from "./tools/passportGenerateToken.js";
import { tool$paymentsSearch } from "./tools/paymentsSearch.js";
import { tool$plansCreate } from "./tools/plansCreate.js";
import { tool$plansSearch } from "./tools/plansSearch.js";
import { tool$quickLinksCreate } from "./tools/quickLinksCreate.js";
import { tool$quickLinksSearch } from "./tools/quickLinksSearch.js";
import { tool$shoppersCreateSafepay } from "./tools/shoppersCreateSafepay.js";
import { tool$subscriptionsSearch } from "./tools/subscriptionsSearch.js";
import { tool$usersCreateGuestJwt } from "./tools/usersCreateGuestJwt.js";
import { tool$usersExists } from "./tools/usersExists.js";
import { tool$usersFindSafepayShopper } from "./tools/usersFindSafepayShopper.js";
import { tool$userWalletsListPaymentMethods } from "./tools/userWalletsListPaymentMethods.js";
import { tool$webhooksTest } from "./tools/webhooksTest.js";

export function createMCPServer(deps: {
  logger: ConsoleLogger;
  allowedTools?: string[] | undefined;
  scopes?: MCPScope[] | undefined;
  serverURL?: string | undefined;
  serverIdx?: SDKOptions["serverIdx"] | undefined;
}) {
  const server = new McpServer({
    name: "Safepay",
    version: "0.0.3",
  });

  const client = new SafepayCore({
    serverURL: deps.serverURL,
    serverIdx: deps.serverIdx,
  });

  const scopes = new Set(deps.scopes);

  const allowedTools = deps.allowedTools && new Set(deps.allowedTools);
  const tool = createRegisterTool(
    deps.logger,
    server,
    client,
    scopes,
    allowedTools,
  );
  const resource = createRegisterResource(deps.logger, server, client, scopes);
  const resourceTemplate = createRegisterResourceTemplate(
    deps.logger,
    server,
    client,
    scopes,
  );
  const prompt = createRegisterPrompt(deps.logger, server, client, scopes);
  const register = { tool, resource, resourceTemplate, prompt };
  void register; // suppress unused warnings

  tool(tool$companyLogin);
  tool(tool$authCreateMerchantJwt);
  tool(tool$authLogin);
  tool(tool$usersCreateGuestJwt);
  tool(tool$usersFindSafepayShopper);
  tool(tool$usersExists);
  tool(tool$apiKeysCreate);
  tool(tool$apiSettingsGetApiKey);
  tool(tool$apiSettingsUpdateKey);
  tool(tool$passportGenerateToken);
  tool(tool$customersCreate);
  tool(tool$customersList);
  tool(tool$addressesCreate);
  tool(tool$orderPaymentsCreate);
  tool(tool$paymentsSearch);
  tool(tool$metaListCountries);
  tool(tool$metaGetCountry);
  tool(tool$webhooksTest);
  tool(tool$plansCreate);
  tool(tool$plansSearch);
  tool(tool$subscriptionsSearch);
  tool(tool$clientTransactionsSearch);
  tool(tool$invoicesCreateQuickLink);
  tool(tool$quickLinksCreate);
  tool(tool$quickLinksSearch);
  tool(tool$shoppersCreateSafepay);
  tool(tool$userWalletsListPaymentMethods);

  return server;
}
