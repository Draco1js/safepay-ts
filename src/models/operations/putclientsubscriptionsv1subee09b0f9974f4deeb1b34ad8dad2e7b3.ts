/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PauseCollection = {
  paymentCollectionBehavior?: string | undefined;
};

export type PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Request =
  {
    billingCycleAnchor?: Date | undefined;
    trialEnd?: Date | undefined;
    cancelAtPeriodEnd?: boolean | undefined;
    pauseCollection?: PauseCollection | undefined;
    neverExpires?: boolean | undefined;
    numberOfBillingCycles?: number | undefined;
    prorationBehavior?: string | undefined;
  };

export type PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Status =
  {
    errors?: Array<string> | undefined;
    message?: string | undefined;
  };

export type PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3PlanPriceMoney =
  {
    currency?: string | undefined;
    amount?: string | undefined;
  };

export type PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Plan = {
  token?: string | undefined;
  merchantApiKey?: string | undefined;
  name?: string | undefined;
  amount?: string | undefined;
  currency?: string | undefined;
  intervalCount?: number | undefined;
  interval?: string | undefined;
  product?: string | undefined;
  type?: string | undefined;
  trialPeriodDays?: number | undefined;
  description?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  active?: boolean | undefined;
  archived?: boolean | undefined;
  numberOfBillingCycles?: number | undefined;
  applyAmountChangeOnExistingSubscriptions?: boolean | undefined;
  priceMoney?:
    | PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3PlanPriceMoney
    | undefined;
};

export type PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3PriceMoney =
  {
    currency?: string | undefined;
    amount?: string | undefined;
  };

export type PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Subscription =
  {
    token?: string | undefined;
    planId?: string | undefined;
    userId?: string | undefined;
    instrumentId?: string | undefined;
    status?: string | undefined;
    billingCycleAnchor?: Date | undefined;
    priceAmount?: string | undefined;
    priceCurrency?: string | undefined;
    balance?: string | undefined;
    startDate?: Date | undefined;
    trialStartDate?: Date | undefined;
    trialEndDate?: Date | undefined;
    cancelAtPeriodEnd?: boolean | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    plan?:
      | PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Plan
      | undefined;
    currentPeriodStartDate?: Date | undefined;
    currentPeriodEndDate?: Date | undefined;
    pausedAt?: Date | undefined;
    neverExpires?: boolean | undefined;
    numberOfBillingCycles?: number | undefined;
    merchantApiKey?: string | undefined;
    priceMoney?:
      | PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3PriceMoney
      | undefined;
  };

export type PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Data = {
  requestId?: string | undefined;
  subscription?:
    | PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Subscription
    | undefined;
};

/**
 * 200
 */
export type PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3ResponseBody =
  {
    data?:
      | PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Data
      | undefined;
  };

export type PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Response =
  {
    headers: { [k: string]: Array<string> };
    result:
      PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3ResponseBody;
  };

/** @internal */
export const PauseCollection$inboundSchema: z.ZodType<
  PauseCollection,
  z.ZodTypeDef,
  unknown
> = z.object({
  payment_collection_behavior: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "payment_collection_behavior": "paymentCollectionBehavior",
  });
});

/** @internal */
export type PauseCollection$Outbound = {
  payment_collection_behavior?: string | undefined;
};

/** @internal */
export const PauseCollection$outboundSchema: z.ZodType<
  PauseCollection$Outbound,
  z.ZodTypeDef,
  PauseCollection
> = z.object({
  paymentCollectionBehavior: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    paymentCollectionBehavior: "payment_collection_behavior",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PauseCollection$ {
  /** @deprecated use `PauseCollection$inboundSchema` instead. */
  export const inboundSchema = PauseCollection$inboundSchema;
  /** @deprecated use `PauseCollection$outboundSchema` instead. */
  export const outboundSchema = PauseCollection$outboundSchema;
  /** @deprecated use `PauseCollection$Outbound` instead. */
  export type Outbound = PauseCollection$Outbound;
}

export function pauseCollectionToJSON(
  pauseCollection: PauseCollection,
): string {
  return JSON.stringify(PauseCollection$outboundSchema.parse(pauseCollection));
}

export function pauseCollectionFromJSON(
  jsonString: string,
): SafeParseResult<PauseCollection, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PauseCollection$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PauseCollection' from JSON`,
  );
}

/** @internal */
export const PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Request$inboundSchema:
  z.ZodType<
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Request,
    z.ZodTypeDef,
    unknown
  > = z.object({
    billing_cycle_anchor: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    trial_end: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    cancel_at_period_end: z.boolean().optional(),
    pause_collection: z.lazy(() => PauseCollection$inboundSchema).optional(),
    never_expires: z.boolean().optional(),
    number_of_billing_cycles: z.number().int().optional(),
    proration_behavior: z.string().optional(),
  }).transform((v) => {
    return remap$(v, {
      "billing_cycle_anchor": "billingCycleAnchor",
      "trial_end": "trialEnd",
      "cancel_at_period_end": "cancelAtPeriodEnd",
      "pause_collection": "pauseCollection",
      "never_expires": "neverExpires",
      "number_of_billing_cycles": "numberOfBillingCycles",
      "proration_behavior": "prorationBehavior",
    });
  });

/** @internal */
export type PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Request$Outbound =
  {
    billing_cycle_anchor?: string | undefined;
    trial_end?: string | undefined;
    cancel_at_period_end?: boolean | undefined;
    pause_collection?: PauseCollection$Outbound | undefined;
    never_expires?: boolean | undefined;
    number_of_billing_cycles?: number | undefined;
    proration_behavior?: string | undefined;
  };

/** @internal */
export const PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Request$outboundSchema:
  z.ZodType<
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Request$Outbound,
    z.ZodTypeDef,
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Request
  > = z.object({
    billingCycleAnchor: z.date().transform(v => v.toISOString()).optional(),
    trialEnd: z.date().transform(v => v.toISOString()).optional(),
    cancelAtPeriodEnd: z.boolean().optional(),
    pauseCollection: z.lazy(() => PauseCollection$outboundSchema).optional(),
    neverExpires: z.boolean().optional(),
    numberOfBillingCycles: z.number().int().optional(),
    prorationBehavior: z.string().optional(),
  }).transform((v) => {
    return remap$(v, {
      billingCycleAnchor: "billing_cycle_anchor",
      trialEnd: "trial_end",
      cancelAtPeriodEnd: "cancel_at_period_end",
      pauseCollection: "pause_collection",
      neverExpires: "never_expires",
      numberOfBillingCycles: "number_of_billing_cycles",
      prorationBehavior: "proration_behavior",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Request$ {
  /** @deprecated use `PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Request$inboundSchema` instead. */
  export const inboundSchema =
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Request$inboundSchema;
  /** @deprecated use `PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Request$outboundSchema` instead. */
  export const outboundSchema =
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Request$outboundSchema;
  /** @deprecated use `PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Request$Outbound` instead. */
  export type Outbound =
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Request$Outbound;
}

export function putClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3RequestToJSON(
  putClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Request:
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Request,
): string {
  return JSON.stringify(
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Request$outboundSchema
      .parse(
        putClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Request,
      ),
  );
}

export function putClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3RequestFromJSON(
  jsonString: string,
): SafeParseResult<
  PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Request,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Request$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Request' from JSON`,
  );
}

/** @internal */
export const PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Status$inboundSchema:
  z.ZodType<
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Status,
    z.ZodTypeDef,
    unknown
  > = z.object({
    errors: z.array(z.string()).optional(),
    message: z.string().optional(),
  });

/** @internal */
export type PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Status$Outbound =
  {
    errors?: Array<string> | undefined;
    message?: string | undefined;
  };

/** @internal */
export const PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Status$outboundSchema:
  z.ZodType<
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Status$Outbound,
    z.ZodTypeDef,
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Status
  > = z.object({
    errors: z.array(z.string()).optional(),
    message: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Status$ {
  /** @deprecated use `PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Status$inboundSchema` instead. */
  export const inboundSchema =
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Status$inboundSchema;
  /** @deprecated use `PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Status$outboundSchema` instead. */
  export const outboundSchema =
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Status$outboundSchema;
  /** @deprecated use `PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Status$Outbound` instead. */
  export type Outbound =
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Status$Outbound;
}

export function putClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3StatusToJSON(
  putClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Status:
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Status,
): string {
  return JSON.stringify(
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Status$outboundSchema
      .parse(putClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Status),
  );
}

export function putClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3StatusFromJSON(
  jsonString: string,
): SafeParseResult<
  PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Status,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Status$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Status' from JSON`,
  );
}

/** @internal */
export const PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3PlanPriceMoney$inboundSchema:
  z.ZodType<
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3PlanPriceMoney,
    z.ZodTypeDef,
    unknown
  > = z.object({
    currency: z.string().optional(),
    amount: z.string().optional(),
  });

/** @internal */
export type PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3PlanPriceMoney$Outbound =
  {
    currency?: string | undefined;
    amount?: string | undefined;
  };

/** @internal */
export const PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3PlanPriceMoney$outboundSchema:
  z.ZodType<
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3PlanPriceMoney$Outbound,
    z.ZodTypeDef,
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3PlanPriceMoney
  > = z.object({
    currency: z.string().optional(),
    amount: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3PlanPriceMoney$ {
  /** @deprecated use `PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3PlanPriceMoney$inboundSchema` instead. */
  export const inboundSchema =
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3PlanPriceMoney$inboundSchema;
  /** @deprecated use `PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3PlanPriceMoney$outboundSchema` instead. */
  export const outboundSchema =
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3PlanPriceMoney$outboundSchema;
  /** @deprecated use `PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3PlanPriceMoney$Outbound` instead. */
  export type Outbound =
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3PlanPriceMoney$Outbound;
}

export function putClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3PlanPriceMoneyToJSON(
  putClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3PlanPriceMoney:
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3PlanPriceMoney,
): string {
  return JSON.stringify(
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3PlanPriceMoney$outboundSchema
      .parse(
        putClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3PlanPriceMoney,
      ),
  );
}

export function putClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3PlanPriceMoneyFromJSON(
  jsonString: string,
): SafeParseResult<
  PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3PlanPriceMoney,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3PlanPriceMoney$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3PlanPriceMoney' from JSON`,
  );
}

/** @internal */
export const PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Plan$inboundSchema:
  z.ZodType<
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Plan,
    z.ZodTypeDef,
    unknown
  > = z.object({
    token: z.string().optional(),
    merchant_api_key: z.string().optional(),
    name: z.string().optional(),
    amount: z.string().optional(),
    currency: z.string().optional(),
    interval_count: z.number().int().optional(),
    interval: z.string().optional(),
    product: z.string().optional(),
    type: z.string().optional(),
    trial_period_days: z.number().int().optional(),
    description: z.string().optional(),
    created_at: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    updated_at: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    active: z.boolean().optional(),
    archived: z.boolean().optional(),
    number_of_billing_cycles: z.number().int().optional(),
    apply_amount_change_on_existing_subscriptions: z.boolean().optional(),
    price_money: z.lazy(() =>
      PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3PlanPriceMoney$inboundSchema
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      "merchant_api_key": "merchantApiKey",
      "interval_count": "intervalCount",
      "trial_period_days": "trialPeriodDays",
      "created_at": "createdAt",
      "updated_at": "updatedAt",
      "number_of_billing_cycles": "numberOfBillingCycles",
      "apply_amount_change_on_existing_subscriptions":
        "applyAmountChangeOnExistingSubscriptions",
      "price_money": "priceMoney",
    });
  });

/** @internal */
export type PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Plan$Outbound =
  {
    token?: string | undefined;
    merchant_api_key?: string | undefined;
    name?: string | undefined;
    amount?: string | undefined;
    currency?: string | undefined;
    interval_count?: number | undefined;
    interval?: string | undefined;
    product?: string | undefined;
    type?: string | undefined;
    trial_period_days?: number | undefined;
    description?: string | undefined;
    created_at?: string | undefined;
    updated_at?: string | undefined;
    active?: boolean | undefined;
    archived?: boolean | undefined;
    number_of_billing_cycles?: number | undefined;
    apply_amount_change_on_existing_subscriptions?: boolean | undefined;
    price_money?:
      | PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3PlanPriceMoney$Outbound
      | undefined;
  };

/** @internal */
export const PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Plan$outboundSchema:
  z.ZodType<
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Plan$Outbound,
    z.ZodTypeDef,
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Plan
  > = z.object({
    token: z.string().optional(),
    merchantApiKey: z.string().optional(),
    name: z.string().optional(),
    amount: z.string().optional(),
    currency: z.string().optional(),
    intervalCount: z.number().int().optional(),
    interval: z.string().optional(),
    product: z.string().optional(),
    type: z.string().optional(),
    trialPeriodDays: z.number().int().optional(),
    description: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    active: z.boolean().optional(),
    archived: z.boolean().optional(),
    numberOfBillingCycles: z.number().int().optional(),
    applyAmountChangeOnExistingSubscriptions: z.boolean().optional(),
    priceMoney: z.lazy(() =>
      PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3PlanPriceMoney$outboundSchema
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      merchantApiKey: "merchant_api_key",
      intervalCount: "interval_count",
      trialPeriodDays: "trial_period_days",
      createdAt: "created_at",
      updatedAt: "updated_at",
      numberOfBillingCycles: "number_of_billing_cycles",
      applyAmountChangeOnExistingSubscriptions:
        "apply_amount_change_on_existing_subscriptions",
      priceMoney: "price_money",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Plan$ {
  /** @deprecated use `PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Plan$inboundSchema` instead. */
  export const inboundSchema =
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Plan$inboundSchema;
  /** @deprecated use `PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Plan$outboundSchema` instead. */
  export const outboundSchema =
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Plan$outboundSchema;
  /** @deprecated use `PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Plan$Outbound` instead. */
  export type Outbound =
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Plan$Outbound;
}

export function putClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3PlanToJSON(
  putClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Plan:
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Plan,
): string {
  return JSON.stringify(
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Plan$outboundSchema
      .parse(putClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Plan),
  );
}

export function putClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3PlanFromJSON(
  jsonString: string,
): SafeParseResult<
  PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Plan,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Plan$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Plan' from JSON`,
  );
}

/** @internal */
export const PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3PriceMoney$inboundSchema:
  z.ZodType<
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3PriceMoney,
    z.ZodTypeDef,
    unknown
  > = z.object({
    currency: z.string().optional(),
    amount: z.string().optional(),
  });

/** @internal */
export type PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3PriceMoney$Outbound =
  {
    currency?: string | undefined;
    amount?: string | undefined;
  };

/** @internal */
export const PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3PriceMoney$outboundSchema:
  z.ZodType<
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3PriceMoney$Outbound,
    z.ZodTypeDef,
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3PriceMoney
  > = z.object({
    currency: z.string().optional(),
    amount: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3PriceMoney$ {
  /** @deprecated use `PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3PriceMoney$inboundSchema` instead. */
  export const inboundSchema =
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3PriceMoney$inboundSchema;
  /** @deprecated use `PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3PriceMoney$outboundSchema` instead. */
  export const outboundSchema =
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3PriceMoney$outboundSchema;
  /** @deprecated use `PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3PriceMoney$Outbound` instead. */
  export type Outbound =
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3PriceMoney$Outbound;
}

export function putClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3PriceMoneyToJSON(
  putClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3PriceMoney:
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3PriceMoney,
): string {
  return JSON.stringify(
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3PriceMoney$outboundSchema
      .parse(
        putClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3PriceMoney,
      ),
  );
}

export function putClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3PriceMoneyFromJSON(
  jsonString: string,
): SafeParseResult<
  PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3PriceMoney,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3PriceMoney$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3PriceMoney' from JSON`,
  );
}

/** @internal */
export const PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Subscription$inboundSchema:
  z.ZodType<
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Subscription,
    z.ZodTypeDef,
    unknown
  > = z.object({
    token: z.string().optional(),
    plan_id: z.string().optional(),
    user_id: z.string().optional(),
    instrument_id: z.string().optional(),
    status: z.string().optional(),
    billing_cycle_anchor: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    price_amount: z.string().optional(),
    price_currency: z.string().optional(),
    balance: z.string().optional(),
    start_date: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    trial_start_date: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    trial_end_date: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    cancel_at_period_end: z.boolean().optional(),
    created_at: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    updated_at: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    plan: z.lazy(() =>
      PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Plan$inboundSchema
    ).optional(),
    current_period_start_date: z.string().datetime({ offset: true }).transform(
      v => new Date(v)
    ).optional(),
    current_period_end_date: z.string().datetime({ offset: true }).transform(
      v => new Date(v)
    ).optional(),
    paused_at: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    never_expires: z.boolean().optional(),
    number_of_billing_cycles: z.number().int().optional(),
    merchant_api_key: z.string().optional(),
    price_money: z.lazy(() =>
      PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3PriceMoney$inboundSchema
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      "plan_id": "planId",
      "user_id": "userId",
      "instrument_id": "instrumentId",
      "billing_cycle_anchor": "billingCycleAnchor",
      "price_amount": "priceAmount",
      "price_currency": "priceCurrency",
      "start_date": "startDate",
      "trial_start_date": "trialStartDate",
      "trial_end_date": "trialEndDate",
      "cancel_at_period_end": "cancelAtPeriodEnd",
      "created_at": "createdAt",
      "updated_at": "updatedAt",
      "current_period_start_date": "currentPeriodStartDate",
      "current_period_end_date": "currentPeriodEndDate",
      "paused_at": "pausedAt",
      "never_expires": "neverExpires",
      "number_of_billing_cycles": "numberOfBillingCycles",
      "merchant_api_key": "merchantApiKey",
      "price_money": "priceMoney",
    });
  });

/** @internal */
export type PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Subscription$Outbound =
  {
    token?: string | undefined;
    plan_id?: string | undefined;
    user_id?: string | undefined;
    instrument_id?: string | undefined;
    status?: string | undefined;
    billing_cycle_anchor?: string | undefined;
    price_amount?: string | undefined;
    price_currency?: string | undefined;
    balance?: string | undefined;
    start_date?: string | undefined;
    trial_start_date?: string | undefined;
    trial_end_date?: string | undefined;
    cancel_at_period_end?: boolean | undefined;
    created_at?: string | undefined;
    updated_at?: string | undefined;
    plan?:
      | PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Plan$Outbound
      | undefined;
    current_period_start_date?: string | undefined;
    current_period_end_date?: string | undefined;
    paused_at?: string | undefined;
    never_expires?: boolean | undefined;
    number_of_billing_cycles?: number | undefined;
    merchant_api_key?: string | undefined;
    price_money?:
      | PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3PriceMoney$Outbound
      | undefined;
  };

/** @internal */
export const PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Subscription$outboundSchema:
  z.ZodType<
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Subscription$Outbound,
    z.ZodTypeDef,
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Subscription
  > = z.object({
    token: z.string().optional(),
    planId: z.string().optional(),
    userId: z.string().optional(),
    instrumentId: z.string().optional(),
    status: z.string().optional(),
    billingCycleAnchor: z.date().transform(v => v.toISOString()).optional(),
    priceAmount: z.string().optional(),
    priceCurrency: z.string().optional(),
    balance: z.string().optional(),
    startDate: z.date().transform(v => v.toISOString()).optional(),
    trialStartDate: z.date().transform(v => v.toISOString()).optional(),
    trialEndDate: z.date().transform(v => v.toISOString()).optional(),
    cancelAtPeriodEnd: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    plan: z.lazy(() =>
      PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Plan$outboundSchema
    ).optional(),
    currentPeriodStartDate: z.date().transform(v => v.toISOString()).optional(),
    currentPeriodEndDate: z.date().transform(v => v.toISOString()).optional(),
    pausedAt: z.date().transform(v => v.toISOString()).optional(),
    neverExpires: z.boolean().optional(),
    numberOfBillingCycles: z.number().int().optional(),
    merchantApiKey: z.string().optional(),
    priceMoney: z.lazy(() =>
      PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3PriceMoney$outboundSchema
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      planId: "plan_id",
      userId: "user_id",
      instrumentId: "instrument_id",
      billingCycleAnchor: "billing_cycle_anchor",
      priceAmount: "price_amount",
      priceCurrency: "price_currency",
      startDate: "start_date",
      trialStartDate: "trial_start_date",
      trialEndDate: "trial_end_date",
      cancelAtPeriodEnd: "cancel_at_period_end",
      createdAt: "created_at",
      updatedAt: "updated_at",
      currentPeriodStartDate: "current_period_start_date",
      currentPeriodEndDate: "current_period_end_date",
      pausedAt: "paused_at",
      neverExpires: "never_expires",
      numberOfBillingCycles: "number_of_billing_cycles",
      merchantApiKey: "merchant_api_key",
      priceMoney: "price_money",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Subscription$ {
  /** @deprecated use `PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Subscription$inboundSchema` instead. */
  export const inboundSchema =
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Subscription$inboundSchema;
  /** @deprecated use `PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Subscription$outboundSchema` instead. */
  export const outboundSchema =
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Subscription$outboundSchema;
  /** @deprecated use `PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Subscription$Outbound` instead. */
  export type Outbound =
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Subscription$Outbound;
}

export function putClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3SubscriptionToJSON(
  putClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Subscription:
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Subscription,
): string {
  return JSON.stringify(
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Subscription$outboundSchema
      .parse(
        putClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Subscription,
      ),
  );
}

export function putClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3SubscriptionFromJSON(
  jsonString: string,
): SafeParseResult<
  PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Subscription,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Subscription$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Subscription' from JSON`,
  );
}

/** @internal */
export const PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Data$inboundSchema:
  z.ZodType<
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Data,
    z.ZodTypeDef,
    unknown
  > = z.object({
    request_id: z.string().optional(),
    subscription: z.lazy(() =>
      PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Subscription$inboundSchema
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      "request_id": "requestId",
    });
  });

/** @internal */
export type PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Data$Outbound =
  {
    request_id?: string | undefined;
    subscription?:
      | PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Subscription$Outbound
      | undefined;
  };

/** @internal */
export const PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Data$outboundSchema:
  z.ZodType<
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Data$Outbound,
    z.ZodTypeDef,
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Data
  > = z.object({
    requestId: z.string().optional(),
    subscription: z.lazy(() =>
      PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Subscription$outboundSchema
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      requestId: "request_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Data$ {
  /** @deprecated use `PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Data$inboundSchema` instead. */
  export const inboundSchema =
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Data$inboundSchema;
  /** @deprecated use `PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Data$outboundSchema` instead. */
  export const outboundSchema =
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Data$outboundSchema;
  /** @deprecated use `PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Data$Outbound` instead. */
  export type Outbound =
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Data$Outbound;
}

export function putClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3DataToJSON(
  putClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Data:
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Data,
): string {
  return JSON.stringify(
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Data$outboundSchema
      .parse(putClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Data),
  );
}

export function putClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3DataFromJSON(
  jsonString: string,
): SafeParseResult<
  PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Data,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Data$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Data' from JSON`,
  );
}

/** @internal */
export const PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3ResponseBody$inboundSchema:
  z.ZodType<
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3ResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    data: z.lazy(() =>
      PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Data$inboundSchema
    ).optional(),
  });

/** @internal */
export type PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3ResponseBody$Outbound =
  {
    data?:
      | PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Data$Outbound
      | undefined;
  };

/** @internal */
export const PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3ResponseBody$outboundSchema:
  z.ZodType<
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3ResponseBody$Outbound,
    z.ZodTypeDef,
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3ResponseBody
  > = z.object({
    data: z.lazy(() =>
      PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Data$outboundSchema
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3ResponseBody$ {
  /** @deprecated use `PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3ResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3ResponseBody$inboundSchema;
  /** @deprecated use `PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3ResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3ResponseBody$outboundSchema;
  /** @deprecated use `PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3ResponseBody$Outbound` instead. */
  export type Outbound =
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3ResponseBody$Outbound;
}

export function putClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3ResponseBodyToJSON(
  putClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3ResponseBody:
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3ResponseBody,
): string {
  return JSON.stringify(
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3ResponseBody$outboundSchema
      .parse(
        putClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3ResponseBody,
      ),
  );
}

export function putClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3ResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3ResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3ResponseBody$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3ResponseBody' from JSON`,
  );
}

/** @internal */
export const PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Response$inboundSchema:
  z.ZodType<
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Response,
    z.ZodTypeDef,
    unknown
  > = z.object({
    Headers: z.record(z.array(z.string())),
    Result: z.lazy(() =>
      PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3ResponseBody$inboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      "Headers": "headers",
      "Result": "result",
    });
  });

/** @internal */
export type PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Response$Outbound =
  {
    Headers: { [k: string]: Array<string> };
    Result:
      PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3ResponseBody$Outbound;
  };

/** @internal */
export const PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Response$outboundSchema:
  z.ZodType<
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Response$Outbound,
    z.ZodTypeDef,
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Response
  > = z.object({
    headers: z.record(z.array(z.string())),
    result: z.lazy(() =>
      PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3ResponseBody$outboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      headers: "Headers",
      result: "Result",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Response$ {
  /** @deprecated use `PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Response$inboundSchema` instead. */
  export const inboundSchema =
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Response$inboundSchema;
  /** @deprecated use `PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Response$outboundSchema` instead. */
  export const outboundSchema =
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Response$outboundSchema;
  /** @deprecated use `PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Response$Outbound` instead. */
  export type Outbound =
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Response$Outbound;
}

export function putClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3ResponseToJSON(
  putClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Response:
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Response,
): string {
  return JSON.stringify(
    PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Response$outboundSchema
      .parse(
        putClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Response,
      ),
  );
}

export function putClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3ResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Response,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Response$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b3Response' from JSON`,
  );
}
