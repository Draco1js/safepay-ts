/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Status = {
  errors?: Array<string> | undefined;
  message?: string | undefined;
};

export type GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1PlanPriceMoney =
  {
    currency?: string | undefined;
    amount?: string | undefined;
  };

export type GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Plan = {
  token?: string | undefined;
  merchantApiKey?: string | undefined;
  name?: string | undefined;
  amount?: string | undefined;
  currency?: string | undefined;
  intervalCount?: number | undefined;
  interval?: string | undefined;
  product?: string | undefined;
  type?: string | undefined;
  trialPeriodDays?: number | undefined;
  description?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  active?: boolean | undefined;
  archived?: boolean | undefined;
  numberOfBillingCycles?: number | undefined;
  applyAmountChangeOnExistingSubscriptions?: boolean | undefined;
  priceMoney?:
    | GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1PlanPriceMoney
    | undefined;
};

export type GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1SubscriptionPriceMoney =
  {
    currency?: string | undefined;
    amount?: string | undefined;
  };

export type GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Subscription =
  {
    token?: string | undefined;
    planId?: string | undefined;
    userId?: string | undefined;
    instrumentId?: string | undefined;
    status?: string | undefined;
    billingCycleAnchor?: Date | undefined;
    priceAmount?: string | undefined;
    priceCurrency?: string | undefined;
    balance?: string | undefined;
    startDate?: Date | undefined;
    endDate?: Date | undefined;
    trialStartDate?: Date | undefined;
    trialEndDate?: Date | undefined;
    cancelAtPeriodEnd?: boolean | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    plan?:
      | GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Plan
      | undefined;
    currentPeriodStartDate?: Date | undefined;
    currentPeriodEndDate?: Date | undefined;
    lastPaidDate?: Date | undefined;
    currentBillingCycle?: number | undefined;
    pausedAt?: Date | undefined;
    resumedAt?: Date | undefined;
    neverExpires?: boolean | undefined;
    numberOfBillingCycles?: number | undefined;
    merchantApiKey?: string | undefined;
    priceMoney?:
      | GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1SubscriptionPriceMoney
      | undefined;
  };

export type GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1PriceMoney =
  {
    currency?: string | undefined;
    amount?: string | undefined;
  };

export type GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Transaction =
  {
    token?: string | undefined;
    chargeAt?: Date | undefined;
    charged?: Date | undefined;
    status?: string | undefined;
    amount?: string | undefined;
    currency?: string | undefined;
    instrumentId?: string | undefined;
    subscriptionId?: string | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    failures?: Array<any> | undefined;
    subscription?:
      | GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Subscription
      | undefined;
    merchantApiKey?: string | undefined;
    userId?: string | undefined;
    transactionType?: string | undefined;
    proration?: boolean | undefined;
    tracker?: string | undefined;
    priceMoney?:
      | GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1PriceMoney
      | undefined;
  };

export type GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Data = {
  transaction?:
    | GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Transaction
    | undefined;
};

/**
 * 200
 */
export type GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1ResponseBody =
  {
    data?:
      | GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Data
      | undefined;
  };

export type GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Response =
  {
    headers: { [k: string]: Array<string> };
    result:
      GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1ResponseBody;
  };

/** @internal */
export const GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Status$inboundSchema:
  z.ZodType<
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Status,
    z.ZodTypeDef,
    unknown
  > = z.object({
    errors: z.array(z.string()).optional(),
    message: z.string().optional(),
  });

/** @internal */
export type GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Status$Outbound =
  {
    errors?: Array<string> | undefined;
    message?: string | undefined;
  };

/** @internal */
export const GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Status$outboundSchema:
  z.ZodType<
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Status$Outbound,
    z.ZodTypeDef,
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Status
  > = z.object({
    errors: z.array(z.string()).optional(),
    message: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Status$ {
  /** @deprecated use `GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Status$inboundSchema` instead. */
  export const inboundSchema =
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Status$inboundSchema;
  /** @deprecated use `GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Status$outboundSchema` instead. */
  export const outboundSchema =
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Status$outboundSchema;
  /** @deprecated use `GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Status$Outbound` instead. */
  export type Outbound =
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Status$Outbound;
}

export function getClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1StatusToJSON(
  getClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Status:
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Status,
): string {
  return JSON.stringify(
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Status$outboundSchema
      .parse(getClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Status),
  );
}

export function getClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1StatusFromJSON(
  jsonString: string,
): SafeParseResult<
  GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Status,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Status$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Status' from JSON`,
  );
}

/** @internal */
export const GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1PlanPriceMoney$inboundSchema:
  z.ZodType<
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1PlanPriceMoney,
    z.ZodTypeDef,
    unknown
  > = z.object({
    currency: z.string().optional(),
    amount: z.string().optional(),
  });

/** @internal */
export type GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1PlanPriceMoney$Outbound =
  {
    currency?: string | undefined;
    amount?: string | undefined;
  };

/** @internal */
export const GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1PlanPriceMoney$outboundSchema:
  z.ZodType<
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1PlanPriceMoney$Outbound,
    z.ZodTypeDef,
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1PlanPriceMoney
  > = z.object({
    currency: z.string().optional(),
    amount: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1PlanPriceMoney$ {
  /** @deprecated use `GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1PlanPriceMoney$inboundSchema` instead. */
  export const inboundSchema =
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1PlanPriceMoney$inboundSchema;
  /** @deprecated use `GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1PlanPriceMoney$outboundSchema` instead. */
  export const outboundSchema =
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1PlanPriceMoney$outboundSchema;
  /** @deprecated use `GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1PlanPriceMoney$Outbound` instead. */
  export type Outbound =
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1PlanPriceMoney$Outbound;
}

export function getClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1PlanPriceMoneyToJSON(
  getClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1PlanPriceMoney:
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1PlanPriceMoney,
): string {
  return JSON.stringify(
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1PlanPriceMoney$outboundSchema
      .parse(
        getClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1PlanPriceMoney,
      ),
  );
}

export function getClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1PlanPriceMoneyFromJSON(
  jsonString: string,
): SafeParseResult<
  GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1PlanPriceMoney,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1PlanPriceMoney$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1PlanPriceMoney' from JSON`,
  );
}

/** @internal */
export const GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Plan$inboundSchema:
  z.ZodType<
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Plan,
    z.ZodTypeDef,
    unknown
  > = z.object({
    token: z.string().optional(),
    merchant_api_key: z.string().optional(),
    name: z.string().optional(),
    amount: z.string().optional(),
    currency: z.string().optional(),
    interval_count: z.number().int().optional(),
    interval: z.string().optional(),
    product: z.string().optional(),
    type: z.string().optional(),
    trial_period_days: z.number().int().optional(),
    description: z.string().optional(),
    created_at: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    updated_at: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    active: z.boolean().optional(),
    archived: z.boolean().optional(),
    number_of_billing_cycles: z.number().int().optional(),
    apply_amount_change_on_existing_subscriptions: z.boolean().optional(),
    price_money: z.lazy(() =>
      GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1PlanPriceMoney$inboundSchema
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      "merchant_api_key": "merchantApiKey",
      "interval_count": "intervalCount",
      "trial_period_days": "trialPeriodDays",
      "created_at": "createdAt",
      "updated_at": "updatedAt",
      "number_of_billing_cycles": "numberOfBillingCycles",
      "apply_amount_change_on_existing_subscriptions":
        "applyAmountChangeOnExistingSubscriptions",
      "price_money": "priceMoney",
    });
  });

/** @internal */
export type GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Plan$Outbound =
  {
    token?: string | undefined;
    merchant_api_key?: string | undefined;
    name?: string | undefined;
    amount?: string | undefined;
    currency?: string | undefined;
    interval_count?: number | undefined;
    interval?: string | undefined;
    product?: string | undefined;
    type?: string | undefined;
    trial_period_days?: number | undefined;
    description?: string | undefined;
    created_at?: string | undefined;
    updated_at?: string | undefined;
    active?: boolean | undefined;
    archived?: boolean | undefined;
    number_of_billing_cycles?: number | undefined;
    apply_amount_change_on_existing_subscriptions?: boolean | undefined;
    price_money?:
      | GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1PlanPriceMoney$Outbound
      | undefined;
  };

/** @internal */
export const GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Plan$outboundSchema:
  z.ZodType<
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Plan$Outbound,
    z.ZodTypeDef,
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Plan
  > = z.object({
    token: z.string().optional(),
    merchantApiKey: z.string().optional(),
    name: z.string().optional(),
    amount: z.string().optional(),
    currency: z.string().optional(),
    intervalCount: z.number().int().optional(),
    interval: z.string().optional(),
    product: z.string().optional(),
    type: z.string().optional(),
    trialPeriodDays: z.number().int().optional(),
    description: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    active: z.boolean().optional(),
    archived: z.boolean().optional(),
    numberOfBillingCycles: z.number().int().optional(),
    applyAmountChangeOnExistingSubscriptions: z.boolean().optional(),
    priceMoney: z.lazy(() =>
      GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1PlanPriceMoney$outboundSchema
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      merchantApiKey: "merchant_api_key",
      intervalCount: "interval_count",
      trialPeriodDays: "trial_period_days",
      createdAt: "created_at",
      updatedAt: "updated_at",
      numberOfBillingCycles: "number_of_billing_cycles",
      applyAmountChangeOnExistingSubscriptions:
        "apply_amount_change_on_existing_subscriptions",
      priceMoney: "price_money",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Plan$ {
  /** @deprecated use `GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Plan$inboundSchema` instead. */
  export const inboundSchema =
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Plan$inboundSchema;
  /** @deprecated use `GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Plan$outboundSchema` instead. */
  export const outboundSchema =
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Plan$outboundSchema;
  /** @deprecated use `GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Plan$Outbound` instead. */
  export type Outbound =
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Plan$Outbound;
}

export function getClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1PlanToJSON(
  getClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Plan:
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Plan,
): string {
  return JSON.stringify(
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Plan$outboundSchema
      .parse(getClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Plan),
  );
}

export function getClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1PlanFromJSON(
  jsonString: string,
): SafeParseResult<
  GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Plan,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Plan$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Plan' from JSON`,
  );
}

/** @internal */
export const GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1SubscriptionPriceMoney$inboundSchema:
  z.ZodType<
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1SubscriptionPriceMoney,
    z.ZodTypeDef,
    unknown
  > = z.object({
    currency: z.string().optional(),
    amount: z.string().optional(),
  });

/** @internal */
export type GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1SubscriptionPriceMoney$Outbound =
  {
    currency?: string | undefined;
    amount?: string | undefined;
  };

/** @internal */
export const GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1SubscriptionPriceMoney$outboundSchema:
  z.ZodType<
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1SubscriptionPriceMoney$Outbound,
    z.ZodTypeDef,
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1SubscriptionPriceMoney
  > = z.object({
    currency: z.string().optional(),
    amount: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1SubscriptionPriceMoney$ {
  /** @deprecated use `GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1SubscriptionPriceMoney$inboundSchema` instead. */
  export const inboundSchema =
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1SubscriptionPriceMoney$inboundSchema;
  /** @deprecated use `GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1SubscriptionPriceMoney$outboundSchema` instead. */
  export const outboundSchema =
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1SubscriptionPriceMoney$outboundSchema;
  /** @deprecated use `GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1SubscriptionPriceMoney$Outbound` instead. */
  export type Outbound =
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1SubscriptionPriceMoney$Outbound;
}

export function getClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1SubscriptionPriceMoneyToJSON(
  getClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1SubscriptionPriceMoney:
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1SubscriptionPriceMoney,
): string {
  return JSON.stringify(
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1SubscriptionPriceMoney$outboundSchema
      .parse(
        getClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1SubscriptionPriceMoney,
      ),
  );
}

export function getClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1SubscriptionPriceMoneyFromJSON(
  jsonString: string,
): SafeParseResult<
  GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1SubscriptionPriceMoney,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1SubscriptionPriceMoney$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1SubscriptionPriceMoney' from JSON`,
  );
}

/** @internal */
export const GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Subscription$inboundSchema:
  z.ZodType<
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Subscription,
    z.ZodTypeDef,
    unknown
  > = z.object({
    token: z.string().optional(),
    plan_id: z.string().optional(),
    user_id: z.string().optional(),
    instrument_id: z.string().optional(),
    status: z.string().optional(),
    billing_cycle_anchor: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    price_amount: z.string().optional(),
    price_currency: z.string().optional(),
    balance: z.string().optional(),
    start_date: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    end_date: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    trial_start_date: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    trial_end_date: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    cancel_at_period_end: z.boolean().optional(),
    created_at: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    updated_at: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    plan: z.lazy(() =>
      GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Plan$inboundSchema
    ).optional(),
    current_period_start_date: z.string().datetime({ offset: true }).transform(
      v => new Date(v)
    ).optional(),
    current_period_end_date: z.string().datetime({ offset: true }).transform(
      v => new Date(v)
    ).optional(),
    last_paid_date: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    current_billing_cycle: z.number().int().optional(),
    paused_at: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    resumed_at: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    never_expires: z.boolean().optional(),
    number_of_billing_cycles: z.number().int().optional(),
    merchant_api_key: z.string().optional(),
    price_money: z.lazy(() =>
      GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1SubscriptionPriceMoney$inboundSchema
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      "plan_id": "planId",
      "user_id": "userId",
      "instrument_id": "instrumentId",
      "billing_cycle_anchor": "billingCycleAnchor",
      "price_amount": "priceAmount",
      "price_currency": "priceCurrency",
      "start_date": "startDate",
      "end_date": "endDate",
      "trial_start_date": "trialStartDate",
      "trial_end_date": "trialEndDate",
      "cancel_at_period_end": "cancelAtPeriodEnd",
      "created_at": "createdAt",
      "updated_at": "updatedAt",
      "current_period_start_date": "currentPeriodStartDate",
      "current_period_end_date": "currentPeriodEndDate",
      "last_paid_date": "lastPaidDate",
      "current_billing_cycle": "currentBillingCycle",
      "paused_at": "pausedAt",
      "resumed_at": "resumedAt",
      "never_expires": "neverExpires",
      "number_of_billing_cycles": "numberOfBillingCycles",
      "merchant_api_key": "merchantApiKey",
      "price_money": "priceMoney",
    });
  });

/** @internal */
export type GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Subscription$Outbound =
  {
    token?: string | undefined;
    plan_id?: string | undefined;
    user_id?: string | undefined;
    instrument_id?: string | undefined;
    status?: string | undefined;
    billing_cycle_anchor?: string | undefined;
    price_amount?: string | undefined;
    price_currency?: string | undefined;
    balance?: string | undefined;
    start_date?: string | undefined;
    end_date?: string | undefined;
    trial_start_date?: string | undefined;
    trial_end_date?: string | undefined;
    cancel_at_period_end?: boolean | undefined;
    created_at?: string | undefined;
    updated_at?: string | undefined;
    plan?:
      | GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Plan$Outbound
      | undefined;
    current_period_start_date?: string | undefined;
    current_period_end_date?: string | undefined;
    last_paid_date?: string | undefined;
    current_billing_cycle?: number | undefined;
    paused_at?: string | undefined;
    resumed_at?: string | undefined;
    never_expires?: boolean | undefined;
    number_of_billing_cycles?: number | undefined;
    merchant_api_key?: string | undefined;
    price_money?:
      | GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1SubscriptionPriceMoney$Outbound
      | undefined;
  };

/** @internal */
export const GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Subscription$outboundSchema:
  z.ZodType<
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Subscription$Outbound,
    z.ZodTypeDef,
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Subscription
  > = z.object({
    token: z.string().optional(),
    planId: z.string().optional(),
    userId: z.string().optional(),
    instrumentId: z.string().optional(),
    status: z.string().optional(),
    billingCycleAnchor: z.date().transform(v => v.toISOString()).optional(),
    priceAmount: z.string().optional(),
    priceCurrency: z.string().optional(),
    balance: z.string().optional(),
    startDate: z.date().transform(v => v.toISOString()).optional(),
    endDate: z.date().transform(v => v.toISOString()).optional(),
    trialStartDate: z.date().transform(v => v.toISOString()).optional(),
    trialEndDate: z.date().transform(v => v.toISOString()).optional(),
    cancelAtPeriodEnd: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    plan: z.lazy(() =>
      GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Plan$outboundSchema
    ).optional(),
    currentPeriodStartDate: z.date().transform(v => v.toISOString()).optional(),
    currentPeriodEndDate: z.date().transform(v => v.toISOString()).optional(),
    lastPaidDate: z.date().transform(v => v.toISOString()).optional(),
    currentBillingCycle: z.number().int().optional(),
    pausedAt: z.date().transform(v => v.toISOString()).optional(),
    resumedAt: z.date().transform(v => v.toISOString()).optional(),
    neverExpires: z.boolean().optional(),
    numberOfBillingCycles: z.number().int().optional(),
    merchantApiKey: z.string().optional(),
    priceMoney: z.lazy(() =>
      GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1SubscriptionPriceMoney$outboundSchema
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      planId: "plan_id",
      userId: "user_id",
      instrumentId: "instrument_id",
      billingCycleAnchor: "billing_cycle_anchor",
      priceAmount: "price_amount",
      priceCurrency: "price_currency",
      startDate: "start_date",
      endDate: "end_date",
      trialStartDate: "trial_start_date",
      trialEndDate: "trial_end_date",
      cancelAtPeriodEnd: "cancel_at_period_end",
      createdAt: "created_at",
      updatedAt: "updated_at",
      currentPeriodStartDate: "current_period_start_date",
      currentPeriodEndDate: "current_period_end_date",
      lastPaidDate: "last_paid_date",
      currentBillingCycle: "current_billing_cycle",
      pausedAt: "paused_at",
      resumedAt: "resumed_at",
      neverExpires: "never_expires",
      numberOfBillingCycles: "number_of_billing_cycles",
      merchantApiKey: "merchant_api_key",
      priceMoney: "price_money",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Subscription$ {
  /** @deprecated use `GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Subscription$inboundSchema` instead. */
  export const inboundSchema =
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Subscription$inboundSchema;
  /** @deprecated use `GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Subscription$outboundSchema` instead. */
  export const outboundSchema =
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Subscription$outboundSchema;
  /** @deprecated use `GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Subscription$Outbound` instead. */
  export type Outbound =
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Subscription$Outbound;
}

export function getClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1SubscriptionToJSON(
  getClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Subscription:
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Subscription,
): string {
  return JSON.stringify(
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Subscription$outboundSchema
      .parse(
        getClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Subscription,
      ),
  );
}

export function getClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1SubscriptionFromJSON(
  jsonString: string,
): SafeParseResult<
  GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Subscription,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Subscription$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Subscription' from JSON`,
  );
}

/** @internal */
export const GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1PriceMoney$inboundSchema:
  z.ZodType<
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1PriceMoney,
    z.ZodTypeDef,
    unknown
  > = z.object({
    currency: z.string().optional(),
    amount: z.string().optional(),
  });

/** @internal */
export type GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1PriceMoney$Outbound =
  {
    currency?: string | undefined;
    amount?: string | undefined;
  };

/** @internal */
export const GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1PriceMoney$outboundSchema:
  z.ZodType<
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1PriceMoney$Outbound,
    z.ZodTypeDef,
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1PriceMoney
  > = z.object({
    currency: z.string().optional(),
    amount: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1PriceMoney$ {
  /** @deprecated use `GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1PriceMoney$inboundSchema` instead. */
  export const inboundSchema =
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1PriceMoney$inboundSchema;
  /** @deprecated use `GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1PriceMoney$outboundSchema` instead. */
  export const outboundSchema =
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1PriceMoney$outboundSchema;
  /** @deprecated use `GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1PriceMoney$Outbound` instead. */
  export type Outbound =
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1PriceMoney$Outbound;
}

export function getClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1PriceMoneyToJSON(
  getClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1PriceMoney:
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1PriceMoney,
): string {
  return JSON.stringify(
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1PriceMoney$outboundSchema
      .parse(
        getClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1PriceMoney,
      ),
  );
}

export function getClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1PriceMoneyFromJSON(
  jsonString: string,
): SafeParseResult<
  GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1PriceMoney,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1PriceMoney$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1PriceMoney' from JSON`,
  );
}

/** @internal */
export const GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Transaction$inboundSchema:
  z.ZodType<
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Transaction,
    z.ZodTypeDef,
    unknown
  > = z.object({
    token: z.string().optional(),
    charge_at: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    charged: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    status: z.string().optional(),
    amount: z.string().optional(),
    currency: z.string().optional(),
    instrument_id: z.string().optional(),
    subscription_id: z.string().optional(),
    created_at: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    updated_at: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    failures: z.array(z.any()).optional(),
    subscription: z.lazy(() =>
      GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Subscription$inboundSchema
    ).optional(),
    merchant_api_key: z.string().optional(),
    user_id: z.string().optional(),
    transaction_type: z.string().optional(),
    proration: z.boolean().optional(),
    tracker: z.string().optional(),
    price_money: z.lazy(() =>
      GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1PriceMoney$inboundSchema
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      "charge_at": "chargeAt",
      "instrument_id": "instrumentId",
      "subscription_id": "subscriptionId",
      "created_at": "createdAt",
      "updated_at": "updatedAt",
      "merchant_api_key": "merchantApiKey",
      "user_id": "userId",
      "transaction_type": "transactionType",
      "price_money": "priceMoney",
    });
  });

/** @internal */
export type GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Transaction$Outbound =
  {
    token?: string | undefined;
    charge_at?: string | undefined;
    charged?: string | undefined;
    status?: string | undefined;
    amount?: string | undefined;
    currency?: string | undefined;
    instrument_id?: string | undefined;
    subscription_id?: string | undefined;
    created_at?: string | undefined;
    updated_at?: string | undefined;
    failures?: Array<any> | undefined;
    subscription?:
      | GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Subscription$Outbound
      | undefined;
    merchant_api_key?: string | undefined;
    user_id?: string | undefined;
    transaction_type?: string | undefined;
    proration?: boolean | undefined;
    tracker?: string | undefined;
    price_money?:
      | GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1PriceMoney$Outbound
      | undefined;
  };

/** @internal */
export const GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Transaction$outboundSchema:
  z.ZodType<
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Transaction$Outbound,
    z.ZodTypeDef,
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Transaction
  > = z.object({
    token: z.string().optional(),
    chargeAt: z.date().transform(v => v.toISOString()).optional(),
    charged: z.date().transform(v => v.toISOString()).optional(),
    status: z.string().optional(),
    amount: z.string().optional(),
    currency: z.string().optional(),
    instrumentId: z.string().optional(),
    subscriptionId: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    failures: z.array(z.any()).optional(),
    subscription: z.lazy(() =>
      GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Subscription$outboundSchema
    ).optional(),
    merchantApiKey: z.string().optional(),
    userId: z.string().optional(),
    transactionType: z.string().optional(),
    proration: z.boolean().optional(),
    tracker: z.string().optional(),
    priceMoney: z.lazy(() =>
      GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1PriceMoney$outboundSchema
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      chargeAt: "charge_at",
      instrumentId: "instrument_id",
      subscriptionId: "subscription_id",
      createdAt: "created_at",
      updatedAt: "updated_at",
      merchantApiKey: "merchant_api_key",
      userId: "user_id",
      transactionType: "transaction_type",
      priceMoney: "price_money",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Transaction$ {
  /** @deprecated use `GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Transaction$inboundSchema` instead. */
  export const inboundSchema =
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Transaction$inboundSchema;
  /** @deprecated use `GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Transaction$outboundSchema` instead. */
  export const outboundSchema =
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Transaction$outboundSchema;
  /** @deprecated use `GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Transaction$Outbound` instead. */
  export type Outbound =
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Transaction$Outbound;
}

export function getClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1TransactionToJSON(
  getClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Transaction:
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Transaction,
): string {
  return JSON.stringify(
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Transaction$outboundSchema
      .parse(
        getClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Transaction,
      ),
  );
}

export function getClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1TransactionFromJSON(
  jsonString: string,
): SafeParseResult<
  GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Transaction,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Transaction$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Transaction' from JSON`,
  );
}

/** @internal */
export const GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Data$inboundSchema:
  z.ZodType<
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Data,
    z.ZodTypeDef,
    unknown
  > = z.object({
    transaction: z.lazy(() =>
      GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Transaction$inboundSchema
    ).optional(),
  });

/** @internal */
export type GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Data$Outbound =
  {
    transaction?:
      | GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Transaction$Outbound
      | undefined;
  };

/** @internal */
export const GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Data$outboundSchema:
  z.ZodType<
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Data$Outbound,
    z.ZodTypeDef,
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Data
  > = z.object({
    transaction: z.lazy(() =>
      GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Transaction$outboundSchema
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Data$ {
  /** @deprecated use `GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Data$inboundSchema` instead. */
  export const inboundSchema =
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Data$inboundSchema;
  /** @deprecated use `GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Data$outboundSchema` instead. */
  export const outboundSchema =
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Data$outboundSchema;
  /** @deprecated use `GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Data$Outbound` instead. */
  export type Outbound =
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Data$Outbound;
}

export function getClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1DataToJSON(
  getClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Data:
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Data,
): string {
  return JSON.stringify(
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Data$outboundSchema
      .parse(getClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Data),
  );
}

export function getClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1DataFromJSON(
  jsonString: string,
): SafeParseResult<
  GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Data,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Data$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Data' from JSON`,
  );
}

/** @internal */
export const GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1ResponseBody$inboundSchema:
  z.ZodType<
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1ResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    data: z.lazy(() =>
      GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Data$inboundSchema
    ).optional(),
  });

/** @internal */
export type GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1ResponseBody$Outbound =
  {
    data?:
      | GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Data$Outbound
      | undefined;
  };

/** @internal */
export const GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1ResponseBody$outboundSchema:
  z.ZodType<
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1ResponseBody$Outbound,
    z.ZodTypeDef,
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1ResponseBody
  > = z.object({
    data: z.lazy(() =>
      GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Data$outboundSchema
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1ResponseBody$ {
  /** @deprecated use `GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1ResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1ResponseBody$inboundSchema;
  /** @deprecated use `GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1ResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1ResponseBody$outboundSchema;
  /** @deprecated use `GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1ResponseBody$Outbound` instead. */
  export type Outbound =
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1ResponseBody$Outbound;
}

export function getClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1ResponseBodyToJSON(
  getClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1ResponseBody:
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1ResponseBody,
): string {
  return JSON.stringify(
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1ResponseBody$outboundSchema
      .parse(
        getClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1ResponseBody,
      ),
  );
}

export function getClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1ResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1ResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1ResponseBody$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1ResponseBody' from JSON`,
  );
}

/** @internal */
export const GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Response$inboundSchema:
  z.ZodType<
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Response,
    z.ZodTypeDef,
    unknown
  > = z.object({
    Headers: z.record(z.array(z.string())),
    Result: z.lazy(() =>
      GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1ResponseBody$inboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      "Headers": "headers",
      "Result": "result",
    });
  });

/** @internal */
export type GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Response$Outbound =
  {
    Headers: { [k: string]: Array<string> };
    Result:
      GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1ResponseBody$Outbound;
  };

/** @internal */
export const GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Response$outboundSchema:
  z.ZodType<
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Response$Outbound,
    z.ZodTypeDef,
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Response
  > = z.object({
    headers: z.record(z.array(z.string())),
    result: z.lazy(() =>
      GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1ResponseBody$outboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      headers: "Headers",
      result: "Result",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Response$ {
  /** @deprecated use `GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Response$inboundSchema` instead. */
  export const inboundSchema =
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Response$inboundSchema;
  /** @deprecated use `GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Response$outboundSchema` instead. */
  export const outboundSchema =
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Response$outboundSchema;
  /** @deprecated use `GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Response$Outbound` instead. */
  export type Outbound =
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Response$Outbound;
}

export function getClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1ResponseToJSON(
  getClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Response:
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Response,
): string {
  return JSON.stringify(
    GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Response$outboundSchema
      .parse(
        getClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Response,
      ),
  );
}

export function getClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1ResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Response,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Response$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetClientTransactionsV1Txn17553398B91d41e9Ae47165e194d06a1Response' from JSON`,
  );
}
