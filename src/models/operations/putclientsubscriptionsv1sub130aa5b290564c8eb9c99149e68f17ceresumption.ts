/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionRequest =
  {
    billingCycleAnchor?: string | undefined;
    prorationBehavior?: string | undefined;
  };

export type PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionStatus =
  {
    errors?: Array<string> | undefined;
    message?: string | undefined;
  };

export type PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPlanPriceMoney =
  {
    currency?: string | undefined;
    amount?: string | undefined;
  };

export type PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPlan =
  {
    token?: string | undefined;
    merchantApiKey?: string | undefined;
    name?: string | undefined;
    amount?: string | undefined;
    currency?: string | undefined;
    intervalCount?: number | undefined;
    interval?: string | undefined;
    product?: string | undefined;
    type?: string | undefined;
    trialPeriodDays?: number | undefined;
    description?: string | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    active?: boolean | undefined;
    archived?: boolean | undefined;
    numberOfBillingCycles?: number | undefined;
    applyAmountChangeOnExistingSubscriptions?: boolean | undefined;
    priceMoney?:
      | PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPlanPriceMoney
      | undefined;
  };

export type PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPriceMoney =
  {
    currency?: string | undefined;
    amount?: string | undefined;
  };

export type PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionSubscription =
  {
    token?: string | undefined;
    planId?: string | undefined;
    userId?: string | undefined;
    instrumentId?: string | undefined;
    status?: string | undefined;
    billingCycleAnchor?: Date | undefined;
    priceAmount?: string | undefined;
    priceCurrency?: string | undefined;
    balance?: string | undefined;
    startDate?: Date | undefined;
    trialStartDate?: Date | undefined;
    trialEndDate?: Date | undefined;
    cancelAtPeriodEnd?: boolean | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    plan?:
      | PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPlan
      | undefined;
    currentPeriodStartDate?: Date | undefined;
    currentPeriodEndDate?: Date | undefined;
    pausedAt?: Date | undefined;
    resumedAt?: Date | undefined;
    neverExpires?: boolean | undefined;
    numberOfBillingCycles?: number | undefined;
    merchantApiKey?: string | undefined;
    priceMoney?:
      | PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPriceMoney
      | undefined;
  };

export type PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionData =
  {
    subscription?:
      | PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionSubscription
      | undefined;
  };

/**
 * 200
 */
export type PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionResponseBody =
  {
    data?:
      | PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionData
      | undefined;
  };

export type PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionResponse =
  {
    headers: { [k: string]: Array<string> };
    result:
      PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionResponseBody;
  };

/** @internal */
export const PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionRequest$inboundSchema:
  z.ZodType<
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    billing_cycle_anchor: z.string().optional(),
    proration_behavior: z.string().optional(),
  }).transform((v) => {
    return remap$(v, {
      "billing_cycle_anchor": "billingCycleAnchor",
      "proration_behavior": "prorationBehavior",
    });
  });

/** @internal */
export type PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionRequest$Outbound =
  {
    billing_cycle_anchor?: string | undefined;
    proration_behavior?: string | undefined;
  };

/** @internal */
export const PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionRequest$outboundSchema:
  z.ZodType<
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionRequest$Outbound,
    z.ZodTypeDef,
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionRequest
  > = z.object({
    billingCycleAnchor: z.string().optional(),
    prorationBehavior: z.string().optional(),
  }).transform((v) => {
    return remap$(v, {
      billingCycleAnchor: "billing_cycle_anchor",
      prorationBehavior: "proration_behavior",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionRequest$ {
  /** @deprecated use `PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionRequest$inboundSchema` instead. */
  export const inboundSchema =
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionRequest$inboundSchema;
  /** @deprecated use `PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionRequest$outboundSchema` instead. */
  export const outboundSchema =
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionRequest$outboundSchema;
  /** @deprecated use `PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionRequest$Outbound` instead. */
  export type Outbound =
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionRequest$Outbound;
}

export function putClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionRequestToJSON(
  putClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionRequest:
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionRequest,
): string {
  return JSON.stringify(
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionRequest$outboundSchema
      .parse(
        putClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionRequest,
      ),
  );
}

export function putClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionRequest$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionRequest' from JSON`,
  );
}

/** @internal */
export const PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionStatus$inboundSchema:
  z.ZodType<
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionStatus,
    z.ZodTypeDef,
    unknown
  > = z.object({
    errors: z.array(z.string()).optional(),
    message: z.string().optional(),
  });

/** @internal */
export type PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionStatus$Outbound =
  {
    errors?: Array<string> | undefined;
    message?: string | undefined;
  };

/** @internal */
export const PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionStatus$outboundSchema:
  z.ZodType<
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionStatus$Outbound,
    z.ZodTypeDef,
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionStatus
  > = z.object({
    errors: z.array(z.string()).optional(),
    message: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionStatus$ {
  /** @deprecated use `PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionStatus$inboundSchema` instead. */
  export const inboundSchema =
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionStatus$inboundSchema;
  /** @deprecated use `PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionStatus$outboundSchema` instead. */
  export const outboundSchema =
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionStatus$outboundSchema;
  /** @deprecated use `PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionStatus$Outbound` instead. */
  export type Outbound =
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionStatus$Outbound;
}

export function putClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionStatusToJSON(
  putClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionStatus:
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionStatus,
): string {
  return JSON.stringify(
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionStatus$outboundSchema
      .parse(
        putClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionStatus,
      ),
  );
}

export function putClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionStatusFromJSON(
  jsonString: string,
): SafeParseResult<
  PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionStatus,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionStatus$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionStatus' from JSON`,
  );
}

/** @internal */
export const PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPlanPriceMoney$inboundSchema:
  z.ZodType<
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPlanPriceMoney,
    z.ZodTypeDef,
    unknown
  > = z.object({
    currency: z.string().optional(),
    amount: z.string().optional(),
  });

/** @internal */
export type PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPlanPriceMoney$Outbound =
  {
    currency?: string | undefined;
    amount?: string | undefined;
  };

/** @internal */
export const PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPlanPriceMoney$outboundSchema:
  z.ZodType<
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPlanPriceMoney$Outbound,
    z.ZodTypeDef,
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPlanPriceMoney
  > = z.object({
    currency: z.string().optional(),
    amount: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPlanPriceMoney$ {
  /** @deprecated use `PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPlanPriceMoney$inboundSchema` instead. */
  export const inboundSchema =
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPlanPriceMoney$inboundSchema;
  /** @deprecated use `PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPlanPriceMoney$outboundSchema` instead. */
  export const outboundSchema =
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPlanPriceMoney$outboundSchema;
  /** @deprecated use `PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPlanPriceMoney$Outbound` instead. */
  export type Outbound =
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPlanPriceMoney$Outbound;
}

export function putClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPlanPriceMoneyToJSON(
  putClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPlanPriceMoney:
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPlanPriceMoney,
): string {
  return JSON.stringify(
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPlanPriceMoney$outboundSchema
      .parse(
        putClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPlanPriceMoney,
      ),
  );
}

export function putClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPlanPriceMoneyFromJSON(
  jsonString: string,
): SafeParseResult<
  PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPlanPriceMoney,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPlanPriceMoney$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPlanPriceMoney' from JSON`,
  );
}

/** @internal */
export const PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPlan$inboundSchema:
  z.ZodType<
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPlan,
    z.ZodTypeDef,
    unknown
  > = z.object({
    token: z.string().optional(),
    merchant_api_key: z.string().optional(),
    name: z.string().optional(),
    amount: z.string().optional(),
    currency: z.string().optional(),
    interval_count: z.number().int().optional(),
    interval: z.string().optional(),
    product: z.string().optional(),
    type: z.string().optional(),
    trial_period_days: z.number().int().optional(),
    description: z.string().optional(),
    created_at: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    updated_at: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    active: z.boolean().optional(),
    archived: z.boolean().optional(),
    number_of_billing_cycles: z.number().int().optional(),
    apply_amount_change_on_existing_subscriptions: z.boolean().optional(),
    price_money: z.lazy(() =>
      PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPlanPriceMoney$inboundSchema
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      "merchant_api_key": "merchantApiKey",
      "interval_count": "intervalCount",
      "trial_period_days": "trialPeriodDays",
      "created_at": "createdAt",
      "updated_at": "updatedAt",
      "number_of_billing_cycles": "numberOfBillingCycles",
      "apply_amount_change_on_existing_subscriptions":
        "applyAmountChangeOnExistingSubscriptions",
      "price_money": "priceMoney",
    });
  });

/** @internal */
export type PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPlan$Outbound =
  {
    token?: string | undefined;
    merchant_api_key?: string | undefined;
    name?: string | undefined;
    amount?: string | undefined;
    currency?: string | undefined;
    interval_count?: number | undefined;
    interval?: string | undefined;
    product?: string | undefined;
    type?: string | undefined;
    trial_period_days?: number | undefined;
    description?: string | undefined;
    created_at?: string | undefined;
    updated_at?: string | undefined;
    active?: boolean | undefined;
    archived?: boolean | undefined;
    number_of_billing_cycles?: number | undefined;
    apply_amount_change_on_existing_subscriptions?: boolean | undefined;
    price_money?:
      | PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPlanPriceMoney$Outbound
      | undefined;
  };

/** @internal */
export const PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPlan$outboundSchema:
  z.ZodType<
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPlan$Outbound,
    z.ZodTypeDef,
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPlan
  > = z.object({
    token: z.string().optional(),
    merchantApiKey: z.string().optional(),
    name: z.string().optional(),
    amount: z.string().optional(),
    currency: z.string().optional(),
    intervalCount: z.number().int().optional(),
    interval: z.string().optional(),
    product: z.string().optional(),
    type: z.string().optional(),
    trialPeriodDays: z.number().int().optional(),
    description: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    active: z.boolean().optional(),
    archived: z.boolean().optional(),
    numberOfBillingCycles: z.number().int().optional(),
    applyAmountChangeOnExistingSubscriptions: z.boolean().optional(),
    priceMoney: z.lazy(() =>
      PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPlanPriceMoney$outboundSchema
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      merchantApiKey: "merchant_api_key",
      intervalCount: "interval_count",
      trialPeriodDays: "trial_period_days",
      createdAt: "created_at",
      updatedAt: "updated_at",
      numberOfBillingCycles: "number_of_billing_cycles",
      applyAmountChangeOnExistingSubscriptions:
        "apply_amount_change_on_existing_subscriptions",
      priceMoney: "price_money",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPlan$ {
  /** @deprecated use `PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPlan$inboundSchema` instead. */
  export const inboundSchema =
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPlan$inboundSchema;
  /** @deprecated use `PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPlan$outboundSchema` instead. */
  export const outboundSchema =
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPlan$outboundSchema;
  /** @deprecated use `PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPlan$Outbound` instead. */
  export type Outbound =
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPlan$Outbound;
}

export function putClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPlanToJSON(
  putClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPlan:
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPlan,
): string {
  return JSON.stringify(
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPlan$outboundSchema
      .parse(
        putClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPlan,
      ),
  );
}

export function putClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPlanFromJSON(
  jsonString: string,
): SafeParseResult<
  PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPlan,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPlan$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPlan' from JSON`,
  );
}

/** @internal */
export const PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPriceMoney$inboundSchema:
  z.ZodType<
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPriceMoney,
    z.ZodTypeDef,
    unknown
  > = z.object({
    currency: z.string().optional(),
    amount: z.string().optional(),
  });

/** @internal */
export type PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPriceMoney$Outbound =
  {
    currency?: string | undefined;
    amount?: string | undefined;
  };

/** @internal */
export const PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPriceMoney$outboundSchema:
  z.ZodType<
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPriceMoney$Outbound,
    z.ZodTypeDef,
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPriceMoney
  > = z.object({
    currency: z.string().optional(),
    amount: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPriceMoney$ {
  /** @deprecated use `PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPriceMoney$inboundSchema` instead. */
  export const inboundSchema =
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPriceMoney$inboundSchema;
  /** @deprecated use `PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPriceMoney$outboundSchema` instead. */
  export const outboundSchema =
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPriceMoney$outboundSchema;
  /** @deprecated use `PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPriceMoney$Outbound` instead. */
  export type Outbound =
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPriceMoney$Outbound;
}

export function putClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPriceMoneyToJSON(
  putClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPriceMoney:
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPriceMoney,
): string {
  return JSON.stringify(
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPriceMoney$outboundSchema
      .parse(
        putClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPriceMoney,
      ),
  );
}

export function putClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPriceMoneyFromJSON(
  jsonString: string,
): SafeParseResult<
  PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPriceMoney,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPriceMoney$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPriceMoney' from JSON`,
  );
}

/** @internal */
export const PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionSubscription$inboundSchema:
  z.ZodType<
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionSubscription,
    z.ZodTypeDef,
    unknown
  > = z.object({
    token: z.string().optional(),
    plan_id: z.string().optional(),
    user_id: z.string().optional(),
    instrument_id: z.string().optional(),
    status: z.string().optional(),
    billing_cycle_anchor: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    price_amount: z.string().optional(),
    price_currency: z.string().optional(),
    balance: z.string().optional(),
    start_date: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    trial_start_date: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    trial_end_date: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    cancel_at_period_end: z.boolean().optional(),
    created_at: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    updated_at: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    plan: z.lazy(() =>
      PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPlan$inboundSchema
    ).optional(),
    current_period_start_date: z.string().datetime({ offset: true }).transform(
      v => new Date(v)
    ).optional(),
    current_period_end_date: z.string().datetime({ offset: true }).transform(
      v => new Date(v)
    ).optional(),
    paused_at: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    resumed_at: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    never_expires: z.boolean().optional(),
    number_of_billing_cycles: z.number().int().optional(),
    merchant_api_key: z.string().optional(),
    price_money: z.lazy(() =>
      PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPriceMoney$inboundSchema
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      "plan_id": "planId",
      "user_id": "userId",
      "instrument_id": "instrumentId",
      "billing_cycle_anchor": "billingCycleAnchor",
      "price_amount": "priceAmount",
      "price_currency": "priceCurrency",
      "start_date": "startDate",
      "trial_start_date": "trialStartDate",
      "trial_end_date": "trialEndDate",
      "cancel_at_period_end": "cancelAtPeriodEnd",
      "created_at": "createdAt",
      "updated_at": "updatedAt",
      "current_period_start_date": "currentPeriodStartDate",
      "current_period_end_date": "currentPeriodEndDate",
      "paused_at": "pausedAt",
      "resumed_at": "resumedAt",
      "never_expires": "neverExpires",
      "number_of_billing_cycles": "numberOfBillingCycles",
      "merchant_api_key": "merchantApiKey",
      "price_money": "priceMoney",
    });
  });

/** @internal */
export type PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionSubscription$Outbound =
  {
    token?: string | undefined;
    plan_id?: string | undefined;
    user_id?: string | undefined;
    instrument_id?: string | undefined;
    status?: string | undefined;
    billing_cycle_anchor?: string | undefined;
    price_amount?: string | undefined;
    price_currency?: string | undefined;
    balance?: string | undefined;
    start_date?: string | undefined;
    trial_start_date?: string | undefined;
    trial_end_date?: string | undefined;
    cancel_at_period_end?: boolean | undefined;
    created_at?: string | undefined;
    updated_at?: string | undefined;
    plan?:
      | PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPlan$Outbound
      | undefined;
    current_period_start_date?: string | undefined;
    current_period_end_date?: string | undefined;
    paused_at?: string | undefined;
    resumed_at?: string | undefined;
    never_expires?: boolean | undefined;
    number_of_billing_cycles?: number | undefined;
    merchant_api_key?: string | undefined;
    price_money?:
      | PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPriceMoney$Outbound
      | undefined;
  };

/** @internal */
export const PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionSubscription$outboundSchema:
  z.ZodType<
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionSubscription$Outbound,
    z.ZodTypeDef,
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionSubscription
  > = z.object({
    token: z.string().optional(),
    planId: z.string().optional(),
    userId: z.string().optional(),
    instrumentId: z.string().optional(),
    status: z.string().optional(),
    billingCycleAnchor: z.date().transform(v => v.toISOString()).optional(),
    priceAmount: z.string().optional(),
    priceCurrency: z.string().optional(),
    balance: z.string().optional(),
    startDate: z.date().transform(v => v.toISOString()).optional(),
    trialStartDate: z.date().transform(v => v.toISOString()).optional(),
    trialEndDate: z.date().transform(v => v.toISOString()).optional(),
    cancelAtPeriodEnd: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    plan: z.lazy(() =>
      PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPlan$outboundSchema
    ).optional(),
    currentPeriodStartDate: z.date().transform(v => v.toISOString()).optional(),
    currentPeriodEndDate: z.date().transform(v => v.toISOString()).optional(),
    pausedAt: z.date().transform(v => v.toISOString()).optional(),
    resumedAt: z.date().transform(v => v.toISOString()).optional(),
    neverExpires: z.boolean().optional(),
    numberOfBillingCycles: z.number().int().optional(),
    merchantApiKey: z.string().optional(),
    priceMoney: z.lazy(() =>
      PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionPriceMoney$outboundSchema
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      planId: "plan_id",
      userId: "user_id",
      instrumentId: "instrument_id",
      billingCycleAnchor: "billing_cycle_anchor",
      priceAmount: "price_amount",
      priceCurrency: "price_currency",
      startDate: "start_date",
      trialStartDate: "trial_start_date",
      trialEndDate: "trial_end_date",
      cancelAtPeriodEnd: "cancel_at_period_end",
      createdAt: "created_at",
      updatedAt: "updated_at",
      currentPeriodStartDate: "current_period_start_date",
      currentPeriodEndDate: "current_period_end_date",
      pausedAt: "paused_at",
      resumedAt: "resumed_at",
      neverExpires: "never_expires",
      numberOfBillingCycles: "number_of_billing_cycles",
      merchantApiKey: "merchant_api_key",
      priceMoney: "price_money",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionSubscription$ {
  /** @deprecated use `PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionSubscription$inboundSchema` instead. */
  export const inboundSchema =
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionSubscription$inboundSchema;
  /** @deprecated use `PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionSubscription$outboundSchema` instead. */
  export const outboundSchema =
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionSubscription$outboundSchema;
  /** @deprecated use `PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionSubscription$Outbound` instead. */
  export type Outbound =
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionSubscription$Outbound;
}

export function putClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionSubscriptionToJSON(
  putClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionSubscription:
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionSubscription,
): string {
  return JSON.stringify(
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionSubscription$outboundSchema
      .parse(
        putClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionSubscription,
      ),
  );
}

export function putClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionSubscriptionFromJSON(
  jsonString: string,
): SafeParseResult<
  PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionSubscription,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionSubscription$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionSubscription' from JSON`,
  );
}

/** @internal */
export const PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionData$inboundSchema:
  z.ZodType<
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionData,
    z.ZodTypeDef,
    unknown
  > = z.object({
    subscription: z.lazy(() =>
      PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionSubscription$inboundSchema
    ).optional(),
  });

/** @internal */
export type PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionData$Outbound =
  {
    subscription?:
      | PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionSubscription$Outbound
      | undefined;
  };

/** @internal */
export const PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionData$outboundSchema:
  z.ZodType<
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionData$Outbound,
    z.ZodTypeDef,
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionData
  > = z.object({
    subscription: z.lazy(() =>
      PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionSubscription$outboundSchema
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionData$ {
  /** @deprecated use `PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionData$inboundSchema` instead. */
  export const inboundSchema =
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionData$inboundSchema;
  /** @deprecated use `PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionData$outboundSchema` instead. */
  export const outboundSchema =
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionData$outboundSchema;
  /** @deprecated use `PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionData$Outbound` instead. */
  export type Outbound =
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionData$Outbound;
}

export function putClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionDataToJSON(
  putClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionData:
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionData,
): string {
  return JSON.stringify(
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionData$outboundSchema
      .parse(
        putClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionData,
      ),
  );
}

export function putClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionDataFromJSON(
  jsonString: string,
): SafeParseResult<
  PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionData,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionData$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionData' from JSON`,
  );
}

/** @internal */
export const PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionResponseBody$inboundSchema:
  z.ZodType<
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    data: z.lazy(() =>
      PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionData$inboundSchema
    ).optional(),
  });

/** @internal */
export type PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionResponseBody$Outbound =
  {
    data?:
      | PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionData$Outbound
      | undefined;
  };

/** @internal */
export const PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionResponseBody$outboundSchema:
  z.ZodType<
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionResponseBody$Outbound,
    z.ZodTypeDef,
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionResponseBody
  > = z.object({
    data: z.lazy(() =>
      PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionData$outboundSchema
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionResponseBody$ {
  /** @deprecated use `PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionResponseBody$inboundSchema;
  /** @deprecated use `PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionResponseBody$outboundSchema;
  /** @deprecated use `PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionResponseBody$Outbound` instead. */
  export type Outbound =
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionResponseBody$Outbound;
}

export function putClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionResponseBodyToJSON(
  putClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionResponseBody:
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionResponseBody,
): string {
  return JSON.stringify(
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionResponseBody$outboundSchema
      .parse(
        putClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionResponseBody,
      ),
  );
}

export function putClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionResponseBody$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionResponseBody' from JSON`,
  );
}

/** @internal */
export const PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionResponse$inboundSchema:
  z.ZodType<
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    Headers: z.record(z.array(z.string())),
    Result: z.lazy(() =>
      PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionResponseBody$inboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      "Headers": "headers",
      "Result": "result",
    });
  });

/** @internal */
export type PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionResponse$Outbound =
  {
    Headers: { [k: string]: Array<string> };
    Result:
      PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionResponseBody$Outbound;
  };

/** @internal */
export const PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionResponse$outboundSchema:
  z.ZodType<
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionResponse$Outbound,
    z.ZodTypeDef,
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionResponse
  > = z.object({
    headers: z.record(z.array(z.string())),
    result: z.lazy(() =>
      PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionResponseBody$outboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      headers: "Headers",
      result: "Result",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionResponse$ {
  /** @deprecated use `PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionResponse$inboundSchema` instead. */
  export const inboundSchema =
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionResponse$inboundSchema;
  /** @deprecated use `PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionResponse$outboundSchema` instead. */
  export const outboundSchema =
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionResponse$outboundSchema;
  /** @deprecated use `PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionResponse$Outbound` instead. */
  export type Outbound =
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionResponse$Outbound;
}

export function putClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionResponseToJSON(
  putClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionResponse:
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionResponse,
): string {
  return JSON.stringify(
    PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionResponse$outboundSchema
      .parse(
        putClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionResponse,
      ),
  );
}

export function putClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionResponse$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutClientSubscriptionsV1Sub130aa5b290564c8eB9c99149e68f17ceResumptionResponse' from JSON`,
  );
}
