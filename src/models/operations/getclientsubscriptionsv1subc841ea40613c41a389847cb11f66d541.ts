/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Status =
  {
    errors?: Array<string> | undefined;
    message?: string | undefined;
  };

export type GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Contact =
  {
    id?: number | undefined;
    token?: string | undefined;
    user?: string | undefined;
    firstName?: string | undefined;
    lastName?: string | undefined;
    email?: string | undefined;
    phone?: string | undefined;
    isDefault?: boolean | undefined;
    createdAt?: any | null | undefined;
    updatedAt?: any | null | undefined;
  };

export type WalletContact = {
  id?: number | undefined;
  token?: string | undefined;
  user?: string | undefined;
  firstName?: string | undefined;
  lastName?: string | undefined;
  email?: string | undefined;
  phone?: string | undefined;
  isDefault?: boolean | undefined;
  createdAt?: any | null | undefined;
  updatedAt?: any | null | undefined;
};

export type GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Wallet =
  {
    id?: number | undefined;
    token?: string | undefined;
    user?: string | undefined;
    kind?: string | undefined;
    contact?: WalletContact | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
  };

export type User = {
  identifier?: string | undefined;
  contact?:
    | GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Contact
    | undefined;
  avatar?: string | undefined;
  wallet?:
    | Array<GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Wallet>
    | undefined;
};

export type GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541PlanPriceMoney =
  {
    currency?: string | undefined;
    amount?: string | undefined;
  };

export type GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Plan = {
  token?: string | undefined;
  merchantApiKey?: string | undefined;
  name?: string | undefined;
  amount?: string | undefined;
  currency?: string | undefined;
  intervalCount?: number | undefined;
  interval?: string | undefined;
  product?: string | undefined;
  type?: string | undefined;
  trialPeriodDays?: number | undefined;
  description?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  active?: boolean | undefined;
  archived?: boolean | undefined;
  numberOfBillingCycles?: number | undefined;
  applyAmountChangeOnExistingSubscriptions?: boolean | undefined;
  priceMoney?:
    | GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541PlanPriceMoney
    | undefined;
};

export type GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541PriceMoney =
  {
    currency?: string | undefined;
    amount?: string | undefined;
  };

export type GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Subscription =
  {
    token?: string | undefined;
    planId?: string | undefined;
    userId?: string | undefined;
    user?: User | undefined;
    instrumentId?: string | undefined;
    status?: string | undefined;
    billingCycleAnchor?: Date | undefined;
    priceAmount?: string | undefined;
    priceCurrency?: string | undefined;
    balance?: string | undefined;
    startDate?: Date | undefined;
    trialStartDate?: Date | undefined;
    trialEndDate?: Date | undefined;
    cancelAtPeriodEnd?: boolean | undefined;
    canceledAt?: Date | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    plan?:
      | GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Plan
      | undefined;
    currentPeriodStartDate?: Date | undefined;
    currentPeriodEndDate?: Date | undefined;
    neverExpires?: boolean | undefined;
    numberOfBillingCycles?: number | undefined;
    merchantApiKey?: string | undefined;
    priceMoney?:
      | GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541PriceMoney
      | undefined;
  };

export type GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Data = {
  requestId?: string | undefined;
  subscription?:
    | GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Subscription
    | undefined;
};

/**
 * 200
 */
export type GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541ResponseBody =
  {
    data?:
      | GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Data
      | undefined;
  };

export type GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Response =
  {
    headers: { [k: string]: Array<string> };
    result:
      GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541ResponseBody;
  };

/** @internal */
export const GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Status$inboundSchema:
  z.ZodType<
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Status,
    z.ZodTypeDef,
    unknown
  > = z.object({
    errors: z.array(z.string()).optional(),
    message: z.string().optional(),
  });

/** @internal */
export type GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Status$Outbound =
  {
    errors?: Array<string> | undefined;
    message?: string | undefined;
  };

/** @internal */
export const GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Status$outboundSchema:
  z.ZodType<
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Status$Outbound,
    z.ZodTypeDef,
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Status
  > = z.object({
    errors: z.array(z.string()).optional(),
    message: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Status$ {
  /** @deprecated use `GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Status$inboundSchema` instead. */
  export const inboundSchema =
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Status$inboundSchema;
  /** @deprecated use `GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Status$outboundSchema` instead. */
  export const outboundSchema =
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Status$outboundSchema;
  /** @deprecated use `GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Status$Outbound` instead. */
  export type Outbound =
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Status$Outbound;
}

export function getClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541StatusToJSON(
  getClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Status:
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Status,
): string {
  return JSON.stringify(
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Status$outboundSchema
      .parse(getClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Status),
  );
}

export function getClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541StatusFromJSON(
  jsonString: string,
): SafeParseResult<
  GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Status,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Status$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Status' from JSON`,
  );
}

/** @internal */
export const GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Contact$inboundSchema:
  z.ZodType<
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Contact,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.number().int().optional(),
    token: z.string().optional(),
    user: z.string().optional(),
    first_name: z.string().optional(),
    last_name: z.string().optional(),
    email: z.string().optional(),
    phone: z.string().optional(),
    is_default: z.boolean().optional(),
    created_at: z.nullable(z.any()).optional(),
    updated_at: z.nullable(z.any()).optional(),
  }).transform((v) => {
    return remap$(v, {
      "first_name": "firstName",
      "last_name": "lastName",
      "is_default": "isDefault",
      "created_at": "createdAt",
      "updated_at": "updatedAt",
    });
  });

/** @internal */
export type GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Contact$Outbound =
  {
    id?: number | undefined;
    token?: string | undefined;
    user?: string | undefined;
    first_name?: string | undefined;
    last_name?: string | undefined;
    email?: string | undefined;
    phone?: string | undefined;
    is_default?: boolean | undefined;
    created_at?: any | null | undefined;
    updated_at?: any | null | undefined;
  };

/** @internal */
export const GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Contact$outboundSchema:
  z.ZodType<
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Contact$Outbound,
    z.ZodTypeDef,
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Contact
  > = z.object({
    id: z.number().int().optional(),
    token: z.string().optional(),
    user: z.string().optional(),
    firstName: z.string().optional(),
    lastName: z.string().optional(),
    email: z.string().optional(),
    phone: z.string().optional(),
    isDefault: z.boolean().optional(),
    createdAt: z.nullable(z.any()).optional(),
    updatedAt: z.nullable(z.any()).optional(),
  }).transform((v) => {
    return remap$(v, {
      firstName: "first_name",
      lastName: "last_name",
      isDefault: "is_default",
      createdAt: "created_at",
      updatedAt: "updated_at",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Contact$ {
  /** @deprecated use `GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Contact$inboundSchema` instead. */
  export const inboundSchema =
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Contact$inboundSchema;
  /** @deprecated use `GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Contact$outboundSchema` instead. */
  export const outboundSchema =
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Contact$outboundSchema;
  /** @deprecated use `GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Contact$Outbound` instead. */
  export type Outbound =
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Contact$Outbound;
}

export function getClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541ContactToJSON(
  getClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Contact:
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Contact,
): string {
  return JSON.stringify(
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Contact$outboundSchema
      .parse(
        getClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Contact,
      ),
  );
}

export function getClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541ContactFromJSON(
  jsonString: string,
): SafeParseResult<
  GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Contact,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Contact$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Contact' from JSON`,
  );
}

/** @internal */
export const WalletContact$inboundSchema: z.ZodType<
  WalletContact,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number().int().optional(),
  token: z.string().optional(),
  user: z.string().optional(),
  first_name: z.string().optional(),
  last_name: z.string().optional(),
  email: z.string().optional(),
  phone: z.string().optional(),
  is_default: z.boolean().optional(),
  created_at: z.nullable(z.any()).optional(),
  updated_at: z.nullable(z.any()).optional(),
}).transform((v) => {
  return remap$(v, {
    "first_name": "firstName",
    "last_name": "lastName",
    "is_default": "isDefault",
    "created_at": "createdAt",
    "updated_at": "updatedAt",
  });
});

/** @internal */
export type WalletContact$Outbound = {
  id?: number | undefined;
  token?: string | undefined;
  user?: string | undefined;
  first_name?: string | undefined;
  last_name?: string | undefined;
  email?: string | undefined;
  phone?: string | undefined;
  is_default?: boolean | undefined;
  created_at?: any | null | undefined;
  updated_at?: any | null | undefined;
};

/** @internal */
export const WalletContact$outboundSchema: z.ZodType<
  WalletContact$Outbound,
  z.ZodTypeDef,
  WalletContact
> = z.object({
  id: z.number().int().optional(),
  token: z.string().optional(),
  user: z.string().optional(),
  firstName: z.string().optional(),
  lastName: z.string().optional(),
  email: z.string().optional(),
  phone: z.string().optional(),
  isDefault: z.boolean().optional(),
  createdAt: z.nullable(z.any()).optional(),
  updatedAt: z.nullable(z.any()).optional(),
}).transform((v) => {
  return remap$(v, {
    firstName: "first_name",
    lastName: "last_name",
    isDefault: "is_default",
    createdAt: "created_at",
    updatedAt: "updated_at",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WalletContact$ {
  /** @deprecated use `WalletContact$inboundSchema` instead. */
  export const inboundSchema = WalletContact$inboundSchema;
  /** @deprecated use `WalletContact$outboundSchema` instead. */
  export const outboundSchema = WalletContact$outboundSchema;
  /** @deprecated use `WalletContact$Outbound` instead. */
  export type Outbound = WalletContact$Outbound;
}

export function walletContactToJSON(walletContact: WalletContact): string {
  return JSON.stringify(WalletContact$outboundSchema.parse(walletContact));
}

export function walletContactFromJSON(
  jsonString: string,
): SafeParseResult<WalletContact, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => WalletContact$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'WalletContact' from JSON`,
  );
}

/** @internal */
export const GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Wallet$inboundSchema:
  z.ZodType<
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Wallet,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.number().int().optional(),
    token: z.string().optional(),
    user: z.string().optional(),
    kind: z.string().optional(),
    contact: z.lazy(() => WalletContact$inboundSchema).optional(),
    created_at: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    updated_at: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      "created_at": "createdAt",
      "updated_at": "updatedAt",
    });
  });

/** @internal */
export type GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Wallet$Outbound =
  {
    id?: number | undefined;
    token?: string | undefined;
    user?: string | undefined;
    kind?: string | undefined;
    contact?: WalletContact$Outbound | undefined;
    created_at?: string | undefined;
    updated_at?: string | undefined;
  };

/** @internal */
export const GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Wallet$outboundSchema:
  z.ZodType<
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Wallet$Outbound,
    z.ZodTypeDef,
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Wallet
  > = z.object({
    id: z.number().int().optional(),
    token: z.string().optional(),
    user: z.string().optional(),
    kind: z.string().optional(),
    contact: z.lazy(() => WalletContact$outboundSchema).optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
  }).transform((v) => {
    return remap$(v, {
      createdAt: "created_at",
      updatedAt: "updated_at",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Wallet$ {
  /** @deprecated use `GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Wallet$inboundSchema` instead. */
  export const inboundSchema =
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Wallet$inboundSchema;
  /** @deprecated use `GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Wallet$outboundSchema` instead. */
  export const outboundSchema =
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Wallet$outboundSchema;
  /** @deprecated use `GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Wallet$Outbound` instead. */
  export type Outbound =
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Wallet$Outbound;
}

export function getClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541WalletToJSON(
  getClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Wallet:
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Wallet,
): string {
  return JSON.stringify(
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Wallet$outboundSchema
      .parse(getClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Wallet),
  );
}

export function getClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541WalletFromJSON(
  jsonString: string,
): SafeParseResult<
  GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Wallet,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Wallet$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Wallet' from JSON`,
  );
}

/** @internal */
export const User$inboundSchema: z.ZodType<User, z.ZodTypeDef, unknown> = z
  .object({
    identifier: z.string().optional(),
    contact: z.lazy(() =>
      GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Contact$inboundSchema
    ).optional(),
    avatar: z.string().optional(),
    wallet: z.array(
      z.lazy(() =>
        GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Wallet$inboundSchema
      ),
    ).optional(),
  });

/** @internal */
export type User$Outbound = {
  identifier?: string | undefined;
  contact?:
    | GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Contact$Outbound
    | undefined;
  avatar?: string | undefined;
  wallet?:
    | Array<
      GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Wallet$Outbound
    >
    | undefined;
};

/** @internal */
export const User$outboundSchema: z.ZodType<User$Outbound, z.ZodTypeDef, User> =
  z.object({
    identifier: z.string().optional(),
    contact: z.lazy(() =>
      GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Contact$outboundSchema
    ).optional(),
    avatar: z.string().optional(),
    wallet: z.array(
      z.lazy(() =>
        GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Wallet$outboundSchema
      ),
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace User$ {
  /** @deprecated use `User$inboundSchema` instead. */
  export const inboundSchema = User$inboundSchema;
  /** @deprecated use `User$outboundSchema` instead. */
  export const outboundSchema = User$outboundSchema;
  /** @deprecated use `User$Outbound` instead. */
  export type Outbound = User$Outbound;
}

export function userToJSON(user: User): string {
  return JSON.stringify(User$outboundSchema.parse(user));
}

export function userFromJSON(
  jsonString: string,
): SafeParseResult<User, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => User$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'User' from JSON`,
  );
}

/** @internal */
export const GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541PlanPriceMoney$inboundSchema:
  z.ZodType<
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541PlanPriceMoney,
    z.ZodTypeDef,
    unknown
  > = z.object({
    currency: z.string().optional(),
    amount: z.string().optional(),
  });

/** @internal */
export type GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541PlanPriceMoney$Outbound =
  {
    currency?: string | undefined;
    amount?: string | undefined;
  };

/** @internal */
export const GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541PlanPriceMoney$outboundSchema:
  z.ZodType<
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541PlanPriceMoney$Outbound,
    z.ZodTypeDef,
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541PlanPriceMoney
  > = z.object({
    currency: z.string().optional(),
    amount: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541PlanPriceMoney$ {
  /** @deprecated use `GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541PlanPriceMoney$inboundSchema` instead. */
  export const inboundSchema =
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541PlanPriceMoney$inboundSchema;
  /** @deprecated use `GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541PlanPriceMoney$outboundSchema` instead. */
  export const outboundSchema =
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541PlanPriceMoney$outboundSchema;
  /** @deprecated use `GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541PlanPriceMoney$Outbound` instead. */
  export type Outbound =
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541PlanPriceMoney$Outbound;
}

export function getClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541PlanPriceMoneyToJSON(
  getClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541PlanPriceMoney:
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541PlanPriceMoney,
): string {
  return JSON.stringify(
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541PlanPriceMoney$outboundSchema
      .parse(
        getClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541PlanPriceMoney,
      ),
  );
}

export function getClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541PlanPriceMoneyFromJSON(
  jsonString: string,
): SafeParseResult<
  GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541PlanPriceMoney,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541PlanPriceMoney$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541PlanPriceMoney' from JSON`,
  );
}

/** @internal */
export const GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Plan$inboundSchema:
  z.ZodType<
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Plan,
    z.ZodTypeDef,
    unknown
  > = z.object({
    token: z.string().optional(),
    merchant_api_key: z.string().optional(),
    name: z.string().optional(),
    amount: z.string().optional(),
    currency: z.string().optional(),
    interval_count: z.number().int().optional(),
    interval: z.string().optional(),
    product: z.string().optional(),
    type: z.string().optional(),
    trial_period_days: z.number().int().optional(),
    description: z.string().optional(),
    created_at: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    updated_at: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    active: z.boolean().optional(),
    archived: z.boolean().optional(),
    number_of_billing_cycles: z.number().int().optional(),
    apply_amount_change_on_existing_subscriptions: z.boolean().optional(),
    price_money: z.lazy(() =>
      GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541PlanPriceMoney$inboundSchema
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      "merchant_api_key": "merchantApiKey",
      "interval_count": "intervalCount",
      "trial_period_days": "trialPeriodDays",
      "created_at": "createdAt",
      "updated_at": "updatedAt",
      "number_of_billing_cycles": "numberOfBillingCycles",
      "apply_amount_change_on_existing_subscriptions":
        "applyAmountChangeOnExistingSubscriptions",
      "price_money": "priceMoney",
    });
  });

/** @internal */
export type GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Plan$Outbound =
  {
    token?: string | undefined;
    merchant_api_key?: string | undefined;
    name?: string | undefined;
    amount?: string | undefined;
    currency?: string | undefined;
    interval_count?: number | undefined;
    interval?: string | undefined;
    product?: string | undefined;
    type?: string | undefined;
    trial_period_days?: number | undefined;
    description?: string | undefined;
    created_at?: string | undefined;
    updated_at?: string | undefined;
    active?: boolean | undefined;
    archived?: boolean | undefined;
    number_of_billing_cycles?: number | undefined;
    apply_amount_change_on_existing_subscriptions?: boolean | undefined;
    price_money?:
      | GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541PlanPriceMoney$Outbound
      | undefined;
  };

/** @internal */
export const GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Plan$outboundSchema:
  z.ZodType<
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Plan$Outbound,
    z.ZodTypeDef,
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Plan
  > = z.object({
    token: z.string().optional(),
    merchantApiKey: z.string().optional(),
    name: z.string().optional(),
    amount: z.string().optional(),
    currency: z.string().optional(),
    intervalCount: z.number().int().optional(),
    interval: z.string().optional(),
    product: z.string().optional(),
    type: z.string().optional(),
    trialPeriodDays: z.number().int().optional(),
    description: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    active: z.boolean().optional(),
    archived: z.boolean().optional(),
    numberOfBillingCycles: z.number().int().optional(),
    applyAmountChangeOnExistingSubscriptions: z.boolean().optional(),
    priceMoney: z.lazy(() =>
      GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541PlanPriceMoney$outboundSchema
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      merchantApiKey: "merchant_api_key",
      intervalCount: "interval_count",
      trialPeriodDays: "trial_period_days",
      createdAt: "created_at",
      updatedAt: "updated_at",
      numberOfBillingCycles: "number_of_billing_cycles",
      applyAmountChangeOnExistingSubscriptions:
        "apply_amount_change_on_existing_subscriptions",
      priceMoney: "price_money",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Plan$ {
  /** @deprecated use `GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Plan$inboundSchema` instead. */
  export const inboundSchema =
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Plan$inboundSchema;
  /** @deprecated use `GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Plan$outboundSchema` instead. */
  export const outboundSchema =
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Plan$outboundSchema;
  /** @deprecated use `GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Plan$Outbound` instead. */
  export type Outbound =
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Plan$Outbound;
}

export function getClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541PlanToJSON(
  getClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Plan:
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Plan,
): string {
  return JSON.stringify(
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Plan$outboundSchema
      .parse(getClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Plan),
  );
}

export function getClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541PlanFromJSON(
  jsonString: string,
): SafeParseResult<
  GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Plan,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Plan$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Plan' from JSON`,
  );
}

/** @internal */
export const GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541PriceMoney$inboundSchema:
  z.ZodType<
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541PriceMoney,
    z.ZodTypeDef,
    unknown
  > = z.object({
    currency: z.string().optional(),
    amount: z.string().optional(),
  });

/** @internal */
export type GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541PriceMoney$Outbound =
  {
    currency?: string | undefined;
    amount?: string | undefined;
  };

/** @internal */
export const GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541PriceMoney$outboundSchema:
  z.ZodType<
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541PriceMoney$Outbound,
    z.ZodTypeDef,
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541PriceMoney
  > = z.object({
    currency: z.string().optional(),
    amount: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541PriceMoney$ {
  /** @deprecated use `GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541PriceMoney$inboundSchema` instead. */
  export const inboundSchema =
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541PriceMoney$inboundSchema;
  /** @deprecated use `GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541PriceMoney$outboundSchema` instead. */
  export const outboundSchema =
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541PriceMoney$outboundSchema;
  /** @deprecated use `GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541PriceMoney$Outbound` instead. */
  export type Outbound =
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541PriceMoney$Outbound;
}

export function getClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541PriceMoneyToJSON(
  getClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541PriceMoney:
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541PriceMoney,
): string {
  return JSON.stringify(
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541PriceMoney$outboundSchema
      .parse(
        getClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541PriceMoney,
      ),
  );
}

export function getClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541PriceMoneyFromJSON(
  jsonString: string,
): SafeParseResult<
  GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541PriceMoney,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541PriceMoney$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541PriceMoney' from JSON`,
  );
}

/** @internal */
export const GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Subscription$inboundSchema:
  z.ZodType<
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Subscription,
    z.ZodTypeDef,
    unknown
  > = z.object({
    token: z.string().optional(),
    plan_id: z.string().optional(),
    user_id: z.string().optional(),
    user: z.lazy(() => User$inboundSchema).optional(),
    instrument_id: z.string().optional(),
    status: z.string().optional(),
    billing_cycle_anchor: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    price_amount: z.string().optional(),
    price_currency: z.string().optional(),
    balance: z.string().optional(),
    start_date: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    trial_start_date: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    trial_end_date: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    cancel_at_period_end: z.boolean().optional(),
    canceled_at: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    created_at: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    updated_at: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    plan: z.lazy(() =>
      GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Plan$inboundSchema
    ).optional(),
    current_period_start_date: z.string().datetime({ offset: true }).transform(
      v => new Date(v)
    ).optional(),
    current_period_end_date: z.string().datetime({ offset: true }).transform(
      v => new Date(v)
    ).optional(),
    never_expires: z.boolean().optional(),
    number_of_billing_cycles: z.number().int().optional(),
    merchant_api_key: z.string().optional(),
    price_money: z.lazy(() =>
      GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541PriceMoney$inboundSchema
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      "plan_id": "planId",
      "user_id": "userId",
      "instrument_id": "instrumentId",
      "billing_cycle_anchor": "billingCycleAnchor",
      "price_amount": "priceAmount",
      "price_currency": "priceCurrency",
      "start_date": "startDate",
      "trial_start_date": "trialStartDate",
      "trial_end_date": "trialEndDate",
      "cancel_at_period_end": "cancelAtPeriodEnd",
      "canceled_at": "canceledAt",
      "created_at": "createdAt",
      "updated_at": "updatedAt",
      "current_period_start_date": "currentPeriodStartDate",
      "current_period_end_date": "currentPeriodEndDate",
      "never_expires": "neverExpires",
      "number_of_billing_cycles": "numberOfBillingCycles",
      "merchant_api_key": "merchantApiKey",
      "price_money": "priceMoney",
    });
  });

/** @internal */
export type GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Subscription$Outbound =
  {
    token?: string | undefined;
    plan_id?: string | undefined;
    user_id?: string | undefined;
    user?: User$Outbound | undefined;
    instrument_id?: string | undefined;
    status?: string | undefined;
    billing_cycle_anchor?: string | undefined;
    price_amount?: string | undefined;
    price_currency?: string | undefined;
    balance?: string | undefined;
    start_date?: string | undefined;
    trial_start_date?: string | undefined;
    trial_end_date?: string | undefined;
    cancel_at_period_end?: boolean | undefined;
    canceled_at?: string | undefined;
    created_at?: string | undefined;
    updated_at?: string | undefined;
    plan?:
      | GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Plan$Outbound
      | undefined;
    current_period_start_date?: string | undefined;
    current_period_end_date?: string | undefined;
    never_expires?: boolean | undefined;
    number_of_billing_cycles?: number | undefined;
    merchant_api_key?: string | undefined;
    price_money?:
      | GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541PriceMoney$Outbound
      | undefined;
  };

/** @internal */
export const GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Subscription$outboundSchema:
  z.ZodType<
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Subscription$Outbound,
    z.ZodTypeDef,
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Subscription
  > = z.object({
    token: z.string().optional(),
    planId: z.string().optional(),
    userId: z.string().optional(),
    user: z.lazy(() => User$outboundSchema).optional(),
    instrumentId: z.string().optional(),
    status: z.string().optional(),
    billingCycleAnchor: z.date().transform(v => v.toISOString()).optional(),
    priceAmount: z.string().optional(),
    priceCurrency: z.string().optional(),
    balance: z.string().optional(),
    startDate: z.date().transform(v => v.toISOString()).optional(),
    trialStartDate: z.date().transform(v => v.toISOString()).optional(),
    trialEndDate: z.date().transform(v => v.toISOString()).optional(),
    cancelAtPeriodEnd: z.boolean().optional(),
    canceledAt: z.date().transform(v => v.toISOString()).optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    plan: z.lazy(() =>
      GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Plan$outboundSchema
    ).optional(),
    currentPeriodStartDate: z.date().transform(v => v.toISOString()).optional(),
    currentPeriodEndDate: z.date().transform(v => v.toISOString()).optional(),
    neverExpires: z.boolean().optional(),
    numberOfBillingCycles: z.number().int().optional(),
    merchantApiKey: z.string().optional(),
    priceMoney: z.lazy(() =>
      GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541PriceMoney$outboundSchema
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      planId: "plan_id",
      userId: "user_id",
      instrumentId: "instrument_id",
      billingCycleAnchor: "billing_cycle_anchor",
      priceAmount: "price_amount",
      priceCurrency: "price_currency",
      startDate: "start_date",
      trialStartDate: "trial_start_date",
      trialEndDate: "trial_end_date",
      cancelAtPeriodEnd: "cancel_at_period_end",
      canceledAt: "canceled_at",
      createdAt: "created_at",
      updatedAt: "updated_at",
      currentPeriodStartDate: "current_period_start_date",
      currentPeriodEndDate: "current_period_end_date",
      neverExpires: "never_expires",
      numberOfBillingCycles: "number_of_billing_cycles",
      merchantApiKey: "merchant_api_key",
      priceMoney: "price_money",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Subscription$ {
  /** @deprecated use `GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Subscription$inboundSchema` instead. */
  export const inboundSchema =
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Subscription$inboundSchema;
  /** @deprecated use `GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Subscription$outboundSchema` instead. */
  export const outboundSchema =
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Subscription$outboundSchema;
  /** @deprecated use `GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Subscription$Outbound` instead. */
  export type Outbound =
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Subscription$Outbound;
}

export function getClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541SubscriptionToJSON(
  getClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Subscription:
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Subscription,
): string {
  return JSON.stringify(
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Subscription$outboundSchema
      .parse(
        getClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Subscription,
      ),
  );
}

export function getClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541SubscriptionFromJSON(
  jsonString: string,
): SafeParseResult<
  GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Subscription,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Subscription$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Subscription' from JSON`,
  );
}

/** @internal */
export const GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Data$inboundSchema:
  z.ZodType<
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Data,
    z.ZodTypeDef,
    unknown
  > = z.object({
    request_id: z.string().optional(),
    subscription: z.lazy(() =>
      GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Subscription$inboundSchema
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      "request_id": "requestId",
    });
  });

/** @internal */
export type GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Data$Outbound =
  {
    request_id?: string | undefined;
    subscription?:
      | GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Subscription$Outbound
      | undefined;
  };

/** @internal */
export const GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Data$outboundSchema:
  z.ZodType<
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Data$Outbound,
    z.ZodTypeDef,
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Data
  > = z.object({
    requestId: z.string().optional(),
    subscription: z.lazy(() =>
      GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Subscription$outboundSchema
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      requestId: "request_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Data$ {
  /** @deprecated use `GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Data$inboundSchema` instead. */
  export const inboundSchema =
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Data$inboundSchema;
  /** @deprecated use `GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Data$outboundSchema` instead. */
  export const outboundSchema =
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Data$outboundSchema;
  /** @deprecated use `GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Data$Outbound` instead. */
  export type Outbound =
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Data$Outbound;
}

export function getClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541DataToJSON(
  getClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Data:
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Data,
): string {
  return JSON.stringify(
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Data$outboundSchema
      .parse(getClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Data),
  );
}

export function getClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541DataFromJSON(
  jsonString: string,
): SafeParseResult<
  GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Data,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Data$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Data' from JSON`,
  );
}

/** @internal */
export const GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541ResponseBody$inboundSchema:
  z.ZodType<
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541ResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    data: z.lazy(() =>
      GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Data$inboundSchema
    ).optional(),
  });

/** @internal */
export type GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541ResponseBody$Outbound =
  {
    data?:
      | GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Data$Outbound
      | undefined;
  };

/** @internal */
export const GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541ResponseBody$outboundSchema:
  z.ZodType<
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541ResponseBody$Outbound,
    z.ZodTypeDef,
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541ResponseBody
  > = z.object({
    data: z.lazy(() =>
      GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Data$outboundSchema
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541ResponseBody$ {
  /** @deprecated use `GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541ResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541ResponseBody$inboundSchema;
  /** @deprecated use `GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541ResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541ResponseBody$outboundSchema;
  /** @deprecated use `GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541ResponseBody$Outbound` instead. */
  export type Outbound =
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541ResponseBody$Outbound;
}

export function getClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541ResponseBodyToJSON(
  getClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541ResponseBody:
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541ResponseBody,
): string {
  return JSON.stringify(
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541ResponseBody$outboundSchema
      .parse(
        getClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541ResponseBody,
      ),
  );
}

export function getClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541ResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541ResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541ResponseBody$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541ResponseBody' from JSON`,
  );
}

/** @internal */
export const GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Response$inboundSchema:
  z.ZodType<
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Response,
    z.ZodTypeDef,
    unknown
  > = z.object({
    Headers: z.record(z.array(z.string())),
    Result: z.lazy(() =>
      GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541ResponseBody$inboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      "Headers": "headers",
      "Result": "result",
    });
  });

/** @internal */
export type GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Response$Outbound =
  {
    Headers: { [k: string]: Array<string> };
    Result:
      GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541ResponseBody$Outbound;
  };

/** @internal */
export const GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Response$outboundSchema:
  z.ZodType<
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Response$Outbound,
    z.ZodTypeDef,
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Response
  > = z.object({
    headers: z.record(z.array(z.string())),
    result: z.lazy(() =>
      GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541ResponseBody$outboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      headers: "Headers",
      result: "Result",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Response$ {
  /** @deprecated use `GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Response$inboundSchema` instead. */
  export const inboundSchema =
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Response$inboundSchema;
  /** @deprecated use `GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Response$outboundSchema` instead. */
  export const outboundSchema =
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Response$outboundSchema;
  /** @deprecated use `GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Response$Outbound` instead. */
  export type Outbound =
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Response$Outbound;
}

export function getClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541ResponseToJSON(
  getClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Response:
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Response,
): string {
  return JSON.stringify(
    GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Response$outboundSchema
      .parse(
        getClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Response,
      ),
  );
}

export function getClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541ResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Response,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Response$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetClientSubscriptionsV1SubC841ea40613c41a389847cb11f66d541Response' from JSON`,
  );
}
