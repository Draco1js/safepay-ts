/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import * as operations from "../operations/index.js";
import { SafepayError } from "./safepayerror.js";

/**
 * 417
 */
export type PostAuthV1CompanyAuthenticateExpectationFailedErrorData = {
  data?: any | null | undefined;
  status?:
    | operations.PostAuthV1CompanyAuthenticateExpectationFailedStatus
    | undefined;
};

/**
 * 417
 */
export class PostAuthV1CompanyAuthenticateExpectationFailedError
  extends SafepayError
{
  data?: any | null | undefined;
  status?:
    | operations.PostAuthV1CompanyAuthenticateExpectationFailedStatus
    | undefined;

  /** The original data that was passed to this error instance. */
  data$: PostAuthV1CompanyAuthenticateExpectationFailedErrorData;

  constructor(
    err: PostAuthV1CompanyAuthenticateExpectationFailedErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    if (err.data != null) this.data = err.data;
    if (err.status != null) this.status = err.status;

    this.name = "PostAuthV1CompanyAuthenticateExpectationFailedError";
  }
}

/**
 * 401
 */
export type PostAuthV1CompanyAuthenticateUnauthorizedErrorData = {
  data?: any | null | undefined;
  status?:
    | operations.PostAuthV1CompanyAuthenticateUnauthorizedStatus
    | undefined;
};

/**
 * 401
 */
export class PostAuthV1CompanyAuthenticateUnauthorizedError
  extends SafepayError
{
  data?: any | null | undefined;
  status?:
    | operations.PostAuthV1CompanyAuthenticateUnauthorizedStatus
    | undefined;

  /** The original data that was passed to this error instance. */
  data$: PostAuthV1CompanyAuthenticateUnauthorizedErrorData;

  constructor(
    err: PostAuthV1CompanyAuthenticateUnauthorizedErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    if (err.data != null) this.data = err.data;
    if (err.status != null) this.status = err.status;

    this.name = "PostAuthV1CompanyAuthenticateUnauthorizedError";
  }
}

/** @internal */
export const PostAuthV1CompanyAuthenticateExpectationFailedError$inboundSchema:
  z.ZodType<
    PostAuthV1CompanyAuthenticateExpectationFailedError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    data: z.nullable(z.any()).optional(),
    status: z.lazy(() =>
      operations
        .PostAuthV1CompanyAuthenticateExpectationFailedStatus$inboundSchema
    ).optional(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new PostAuthV1CompanyAuthenticateExpectationFailedError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type PostAuthV1CompanyAuthenticateExpectationFailedError$Outbound = {
  data?: any | null | undefined;
  status?:
    | operations.PostAuthV1CompanyAuthenticateExpectationFailedStatus$Outbound
    | undefined;
};

/** @internal */
export const PostAuthV1CompanyAuthenticateExpectationFailedError$outboundSchema:
  z.ZodType<
    PostAuthV1CompanyAuthenticateExpectationFailedError$Outbound,
    z.ZodTypeDef,
    PostAuthV1CompanyAuthenticateExpectationFailedError
  > = z.instanceof(PostAuthV1CompanyAuthenticateExpectationFailedError)
    .transform(v => v.data$)
    .pipe(z.object({
      data: z.nullable(z.any()).optional(),
      status: z.lazy(() =>
        operations
          .PostAuthV1CompanyAuthenticateExpectationFailedStatus$outboundSchema
      ).optional(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostAuthV1CompanyAuthenticateExpectationFailedError$ {
  /** @deprecated use `PostAuthV1CompanyAuthenticateExpectationFailedError$inboundSchema` instead. */
  export const inboundSchema =
    PostAuthV1CompanyAuthenticateExpectationFailedError$inboundSchema;
  /** @deprecated use `PostAuthV1CompanyAuthenticateExpectationFailedError$outboundSchema` instead. */
  export const outboundSchema =
    PostAuthV1CompanyAuthenticateExpectationFailedError$outboundSchema;
  /** @deprecated use `PostAuthV1CompanyAuthenticateExpectationFailedError$Outbound` instead. */
  export type Outbound =
    PostAuthV1CompanyAuthenticateExpectationFailedError$Outbound;
}

/** @internal */
export const PostAuthV1CompanyAuthenticateUnauthorizedError$inboundSchema:
  z.ZodType<
    PostAuthV1CompanyAuthenticateUnauthorizedError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    data: z.nullable(z.any()).optional(),
    status: z.lazy(() =>
      operations.PostAuthV1CompanyAuthenticateUnauthorizedStatus$inboundSchema
    ).optional(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new PostAuthV1CompanyAuthenticateUnauthorizedError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type PostAuthV1CompanyAuthenticateUnauthorizedError$Outbound = {
  data?: any | null | undefined;
  status?:
    | operations.PostAuthV1CompanyAuthenticateUnauthorizedStatus$Outbound
    | undefined;
};

/** @internal */
export const PostAuthV1CompanyAuthenticateUnauthorizedError$outboundSchema:
  z.ZodType<
    PostAuthV1CompanyAuthenticateUnauthorizedError$Outbound,
    z.ZodTypeDef,
    PostAuthV1CompanyAuthenticateUnauthorizedError
  > = z.instanceof(PostAuthV1CompanyAuthenticateUnauthorizedError)
    .transform(v => v.data$)
    .pipe(z.object({
      data: z.nullable(z.any()).optional(),
      status: z.lazy(() =>
        operations
          .PostAuthV1CompanyAuthenticateUnauthorizedStatus$outboundSchema
      ).optional(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostAuthV1CompanyAuthenticateUnauthorizedError$ {
  /** @deprecated use `PostAuthV1CompanyAuthenticateUnauthorizedError$inboundSchema` instead. */
  export const inboundSchema =
    PostAuthV1CompanyAuthenticateUnauthorizedError$inboundSchema;
  /** @deprecated use `PostAuthV1CompanyAuthenticateUnauthorizedError$outboundSchema` instead. */
  export const outboundSchema =
    PostAuthV1CompanyAuthenticateUnauthorizedError$outboundSchema;
  /** @deprecated use `PostAuthV1CompanyAuthenticateUnauthorizedError$Outbound` instead. */
  export type Outbound =
    PostAuthV1CompanyAuthenticateUnauthorizedError$Outbound;
}
