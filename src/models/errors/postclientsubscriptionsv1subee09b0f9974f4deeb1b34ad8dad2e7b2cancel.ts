/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { SafepayError } from "./safepayerror.js";

/**
 * 500
 */
export type PostClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b2CancelInternalServerErrorData =
  {
    error?: string | undefined;
  };

/**
 * 500
 */
export class PostClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b2CancelInternalServerError
  extends SafepayError
{
  error?: string | undefined;

  /** The original data that was passed to this error instance. */
  data$:
    PostClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b2CancelInternalServerErrorData;

  constructor(
    err:
      PostClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b2CancelInternalServerErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    if (err.error != null) this.error = err.error;

    this.name =
      "PostClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b2CancelInternalServerError";
  }
}

/**
 * 406
 */
export type NotAcceptableErrorData = {
  error?: string | undefined;
};

/**
 * 406
 */
export class NotAcceptableError extends SafepayError {
  error?: string | undefined;

  /** The original data that was passed to this error instance. */
  data$: NotAcceptableErrorData;

  constructor(
    err: NotAcceptableErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    if (err.error != null) this.error = err.error;

    this.name = "NotAcceptableError";
  }
}

/** @internal */
export const PostClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b2CancelInternalServerError$inboundSchema:
  z.ZodType<
    PostClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b2CancelInternalServerError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.string().optional(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new PostClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b2CancelInternalServerError(
        v,
        { request: v.request$, response: v.response$, body: v.body$ },
      );
    });

/** @internal */
export type PostClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b2CancelInternalServerError$Outbound =
  {
    error?: string | undefined;
  };

/** @internal */
export const PostClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b2CancelInternalServerError$outboundSchema:
  z.ZodType<
    PostClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b2CancelInternalServerError$Outbound,
    z.ZodTypeDef,
    PostClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b2CancelInternalServerError
  > = z.instanceof(
    PostClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b2CancelInternalServerError,
  )
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.string().optional(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b2CancelInternalServerError$ {
  /** @deprecated use `PostClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b2CancelInternalServerError$inboundSchema` instead. */
  export const inboundSchema =
    PostClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b2CancelInternalServerError$inboundSchema;
  /** @deprecated use `PostClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b2CancelInternalServerError$outboundSchema` instead. */
  export const outboundSchema =
    PostClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b2CancelInternalServerError$outboundSchema;
  /** @deprecated use `PostClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b2CancelInternalServerError$Outbound` instead. */
  export type Outbound =
    PostClientSubscriptionsV1SubEe09b0f9974f4deeB1b34ad8dad2e7b2CancelInternalServerError$Outbound;
}

/** @internal */
export const NotAcceptableError$inboundSchema: z.ZodType<
  NotAcceptableError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: z.string().optional(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new NotAcceptableError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type NotAcceptableError$Outbound = {
  error?: string | undefined;
};

/** @internal */
export const NotAcceptableError$outboundSchema: z.ZodType<
  NotAcceptableError$Outbound,
  z.ZodTypeDef,
  NotAcceptableError
> = z.instanceof(NotAcceptableError)
  .transform(v => v.data$)
  .pipe(z.object({
    error: z.string().optional(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NotAcceptableError$ {
  /** @deprecated use `NotAcceptableError$inboundSchema` instead. */
  export const inboundSchema = NotAcceptableError$inboundSchema;
  /** @deprecated use `NotAcceptableError$outboundSchema` instead. */
  export const outboundSchema = NotAcceptableError$outboundSchema;
  /** @deprecated use `NotAcceptableError$Outbound` instead. */
  export type Outbound = NotAcceptableError$Outbound;
}
