/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import * as operations from "../operations/index.js";
import { SafepayError } from "./safepayerror.js";

/**
 * 417
 */
export type GetInvoiceQuickLinksV1ExpectationFailedErrorData = {
  data?: any | null | undefined;
  status?: operations.GetInvoiceQuickLinksV1ExpectationFailedStatus | undefined;
};

/**
 * 417
 */
export class GetInvoiceQuickLinksV1ExpectationFailedError extends SafepayError {
  data?: any | null | undefined;
  status?: operations.GetInvoiceQuickLinksV1ExpectationFailedStatus | undefined;

  /** The original data that was passed to this error instance. */
  data$: GetInvoiceQuickLinksV1ExpectationFailedErrorData;

  constructor(
    err: GetInvoiceQuickLinksV1ExpectationFailedErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    if (err.data != null) this.data = err.data;
    if (err.status != null) this.status = err.status;

    this.name = "GetInvoiceQuickLinksV1ExpectationFailedError";
  }
}

/**
 * 401
 */
export type GetInvoiceQuickLinksV1UnauthorizedErrorData = {
  data?: any | null | undefined;
  status?: operations.GetInvoiceQuickLinksV1UnauthorizedStatus | undefined;
};

/**
 * 401
 */
export class GetInvoiceQuickLinksV1UnauthorizedError extends SafepayError {
  data?: any | null | undefined;
  status?: operations.GetInvoiceQuickLinksV1UnauthorizedStatus | undefined;

  /** The original data that was passed to this error instance. */
  data$: GetInvoiceQuickLinksV1UnauthorizedErrorData;

  constructor(
    err: GetInvoiceQuickLinksV1UnauthorizedErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    if (err.data != null) this.data = err.data;
    if (err.status != null) this.status = err.status;

    this.name = "GetInvoiceQuickLinksV1UnauthorizedError";
  }
}

/** @internal */
export const GetInvoiceQuickLinksV1ExpectationFailedError$inboundSchema:
  z.ZodType<
    GetInvoiceQuickLinksV1ExpectationFailedError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    data: z.nullable(z.any()).optional(),
    status: z.lazy(() =>
      operations.GetInvoiceQuickLinksV1ExpectationFailedStatus$inboundSchema
    ).optional(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new GetInvoiceQuickLinksV1ExpectationFailedError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type GetInvoiceQuickLinksV1ExpectationFailedError$Outbound = {
  data?: any | null | undefined;
  status?:
    | operations.GetInvoiceQuickLinksV1ExpectationFailedStatus$Outbound
    | undefined;
};

/** @internal */
export const GetInvoiceQuickLinksV1ExpectationFailedError$outboundSchema:
  z.ZodType<
    GetInvoiceQuickLinksV1ExpectationFailedError$Outbound,
    z.ZodTypeDef,
    GetInvoiceQuickLinksV1ExpectationFailedError
  > = z.instanceof(GetInvoiceQuickLinksV1ExpectationFailedError)
    .transform(v => v.data$)
    .pipe(z.object({
      data: z.nullable(z.any()).optional(),
      status: z.lazy(() =>
        operations.GetInvoiceQuickLinksV1ExpectationFailedStatus$outboundSchema
      ).optional(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetInvoiceQuickLinksV1ExpectationFailedError$ {
  /** @deprecated use `GetInvoiceQuickLinksV1ExpectationFailedError$inboundSchema` instead. */
  export const inboundSchema =
    GetInvoiceQuickLinksV1ExpectationFailedError$inboundSchema;
  /** @deprecated use `GetInvoiceQuickLinksV1ExpectationFailedError$outboundSchema` instead. */
  export const outboundSchema =
    GetInvoiceQuickLinksV1ExpectationFailedError$outboundSchema;
  /** @deprecated use `GetInvoiceQuickLinksV1ExpectationFailedError$Outbound` instead. */
  export type Outbound = GetInvoiceQuickLinksV1ExpectationFailedError$Outbound;
}

/** @internal */
export const GetInvoiceQuickLinksV1UnauthorizedError$inboundSchema: z.ZodType<
  GetInvoiceQuickLinksV1UnauthorizedError,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.nullable(z.any()).optional(),
  status: z.lazy(() =>
    operations.GetInvoiceQuickLinksV1UnauthorizedStatus$inboundSchema
  ).optional(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new GetInvoiceQuickLinksV1UnauthorizedError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type GetInvoiceQuickLinksV1UnauthorizedError$Outbound = {
  data?: any | null | undefined;
  status?:
    | operations.GetInvoiceQuickLinksV1UnauthorizedStatus$Outbound
    | undefined;
};

/** @internal */
export const GetInvoiceQuickLinksV1UnauthorizedError$outboundSchema: z.ZodType<
  GetInvoiceQuickLinksV1UnauthorizedError$Outbound,
  z.ZodTypeDef,
  GetInvoiceQuickLinksV1UnauthorizedError
> = z.instanceof(GetInvoiceQuickLinksV1UnauthorizedError)
  .transform(v => v.data$)
  .pipe(z.object({
    data: z.nullable(z.any()).optional(),
    status: z.lazy(() =>
      operations.GetInvoiceQuickLinksV1UnauthorizedStatus$outboundSchema
    ).optional(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetInvoiceQuickLinksV1UnauthorizedError$ {
  /** @deprecated use `GetInvoiceQuickLinksV1UnauthorizedError$inboundSchema` instead. */
  export const inboundSchema =
    GetInvoiceQuickLinksV1UnauthorizedError$inboundSchema;
  /** @deprecated use `GetInvoiceQuickLinksV1UnauthorizedError$outboundSchema` instead. */
  export const outboundSchema =
    GetInvoiceQuickLinksV1UnauthorizedError$outboundSchema;
  /** @deprecated use `GetInvoiceQuickLinksV1UnauthorizedError$Outbound` instead. */
  export type Outbound = GetInvoiceQuickLinksV1UnauthorizedError$Outbound;
}
